Coverage Report by instance with details

=================================================================================
=== Instance: /top/rif
=== Design Unit: work.Ram_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         62        62         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/rif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[9-0]           1           1                              100.00 
                                         dout[7-0]           1           1                              100.00 
                                     dout_ref[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 
                                      tx_valid_ref           1           1                              100.00 

Total Node Count     =         31 
Toggled Node Count   =         31 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (62 of 62 bins)

=================================================================================
=== Instance: /top/sif
=== Design Unit: work.SPI_slave_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         96        96         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/sif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                          MISO_ref           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                              array_for_MOSI[10-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                  rx_data_ref[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      rx_valid_ref           1           1                              100.00 
                                      tx_data[7-0]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         48 
Toggled Node Count   =         48 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (96 of 96 bins)

=================================================================================
=== Instance: /top/wif
=== Design Unit: work.Wrapper_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         40        40         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/wif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                          MISO_ref           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                              array_for_MOSI[10-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                old_operation[2-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 

Total Node Count     =         20 
Toggled Node Count   =         20 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (40 of 40 bins)

=================================================================================
=== Instance: /top/DUT/SLAVE_instance
=== Design Unit: work.SLAVE
=================================================================================

Assertion Coverage:
    Assertions                       7         7         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SLAVE_instance/assert__p_READ_DATA_to_IDLE
                     SPI_slave.sv(173)                  0          1
/top/DUT/SLAVE_instance/assert__p_READ_ADD_to_IDLE
                     SPI_slave.sv(172)                  0          1
/top/DUT/SLAVE_instance/assert__p_WRITE_to_IDLE
                     SPI_slave.sv(171)                  0          1
/top/DUT/SLAVE_instance/assert__p_CHK_CMD_to_WRITE
                     SPI_slave.sv(170)                  0          1
/top/DUT/SLAVE_instance/assert__p_CHK_CMD_to_READ_DATA
                     SPI_slave.sv(169)                  0          1
/top/DUT/SLAVE_instance/assert__p_CHK_CMD_to_READ_ADD
                     SPI_slave.sv(168)                  0          1
/top/DUT/SLAVE_instance/assert__p_IDLE_to_CHK_CMD
                     SPI_slave.sv(167)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        33        33         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/SLAVE_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave.sv
------------------------------------IF Branch------------------------------------
    22                                     14282     Count coming in to IF
    22              1                       1076         if (~rst_n) begin
    25              1                      13206         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    31                                     35457     Count coming in to CASE
    32              1                       7825             IDLE : begin
    38              1                       4978             CHK_CMD : begin
    52              1                      11532             WRITE : begin
    58              1                       6037             READ_ADD : begin
    64              1                       5084             READ_DATA : begin
                                               1     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    33                                      7825     Count coming in to IF
    33              1                       3467                 if (SS_n)
    35              1                       4358                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                      4978     Count coming in to IF
    41              1                       4978                 else begin
Branch totals: 1 hit of 1 branch = 100.00%

------------------------------------IF Branch------------------------------------
    42                                      4978     Count coming in to IF
    42              1                       2617                     if (~MOSI)
    44              1                       2361                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                      2361     Count coming in to IF
    45              1                        598                         if (received_address) 
    47              1                       1763                         else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                     11532     Count coming in to IF
    53              1                       1460                 if (SS_n)
    55              1                      10072                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                      6037     Count coming in to IF
    59              1                        629                 if (SS_n)
    61              1                       5408                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                      5084     Count coming in to IF
    65              1                        340                 if (SS_n)
    67              1                       4744                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    74                                     45717     Count coming in to IF
    74              1                       1075         if (~rst_n) begin 
    81              1                      44642         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    90                                     19460     Count coming in to IF
    90              1                      16578                     if (counter > 0) begin
    94              1                       2882                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    99                                      8359     Count coming in to IF
    99              1                       7112                     if (counter > 0) begin
    103             1                       1247                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    109                                     9678     Count coming in to IF
    109             1                       3758                     if (tx_valid) begin
    119             1                       5920                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    111                                     3758     Count coming in to IF
    111             1                       3082                         if (counter > 0) begin
    115             1                        676                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    120                                     5920     Count coming in to IF
    120             1                       5475                         if (counter > 0) begin
    124             1                        445                         else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT/SLAVE_instance --

  File SPI_slave.sv
----------------Focused Condition View-------------------
Line       90 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       99 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       111 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       120 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             



Directive Coverage:
    Directives                       7         7         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SLAVE_instance/cover__p_READ_DATA_to_IDLE 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(182)
                                                                               328 Covered   
/top/DUT/SLAVE_instance/cover__p_READ_ADD_to_IDLE 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(181)
                                                                               598 Covered   
/top/DUT/SLAVE_instance/cover__p_WRITE_to_IDLE 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(180)
                                                                              1395 Covered   
/top/DUT/SLAVE_instance/cover__p_CHK_CMD_to_WRITE 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(179)
                                                                              1829 Covered   
/top/DUT/SLAVE_instance/cover__p_CHK_CMD_to_READ_DATA 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(178)
                                                                               563 Covered   
/top/DUT/SLAVE_instance/cover__p_CHK_CMD_to_READ_ADD 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(177)
                                                                               790 Covered   
/top/DUT/SLAVE_instance/cover__p_IDLE_to_CHK_CMD 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(176)
                                                                              3257 Covered   
FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT/SLAVE_instance --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  32                IDLE                   0
  38             CHK_CMD                   2
  58            READ_ADD                   3
  64           READ_DATA                   4
  52               WRITE                   1
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                4507          
                 CHK_CMD                3336          
                READ_ADD                1595          
               READ_DATA                1144          
                   WRITE                3700          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  36                   0                3336          IDLE -> CHK_CMD               
  48                   1                 805          CHK_CMD -> READ_ADD           
  46                   2                 581          CHK_CMD -> READ_DATA          
  43                   3                1871          CHK_CMD -> WRITE              
  40                   4                  79          CHK_CMD -> IDLE               
  60                   5                 805          READ_ADD -> IDLE              
  66                   6                 580          READ_DATA -> IDLE             
  54                   7                1871          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      38        38         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/SLAVE_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave.sv
    1                                                module SLAVE (
    2                                                    input  logic       clk,
    3                                                    input  logic       MOSI,
    4                                                    input  logic       rst_n,
    5                                                    input  logic       SS_n,
    6                                                    input  logic       tx_valid,
    7                                                    input  logic [7:0] tx_data,
    8                                                    output logic [9:0] rx_data,
    9                                                    output logic       rx_valid,
    10                                                   output logic       MISO
    11                                               );
    12                                               
    13                                               import SPI_slave_shared_pkg::*;
    14                                               
    15                                               SPI_slave_state_e cs, ns;
    16                                               
    17                                               int       counter;
    18                                               reg       received_address;
    19                                               
    20                                               
    21              1                      14282     always @(posedge clk) begin
    22                                                   if (~rst_n) begin
    23              1                       1076             cs <= IDLE;
    24                                                   end
    25                                                   else begin
    26              1                      13206             cs <= ns;
    27                                                   end
    28                                               end
    29                                               
    30              1                      35457     always @(*) begin
    31                                                   case (cs)
    32                                                       IDLE : begin
    33                                                           if (SS_n)
    34              1                       3467                     ns = IDLE;
    35                                                           else
    36              1                       4358                     ns = CHK_CMD;
    37                                                       end
    38                                                       CHK_CMD : begin
    39                                                           if (SS_n)
    40                                                               ns = IDLE;
    41                                                           else begin
    42                                                               if (~MOSI)
    43              1                       2617                         ns = WRITE;
    44                                                               else begin
    45                                                                   if (received_address) 
    46              1                        598                             ns = READ_DATA; //bug: READ_ADD ==> READ_DATA
    47                                                                   else
    48              1                       1763                             ns = READ_ADD; //bug: READ_DATA ==> READ_ADD
    49                                                               end
    50                                                           end
    51                                                       end
    52                                                       WRITE : begin
    53                                                           if (SS_n)
    54              1                       1460                     ns = IDLE;
    55                                                           else
    56              1                      10072                     ns = WRITE;
    57                                                       end
    58                                                       READ_ADD : begin
    59                                                           if (SS_n)
    60              1                        629                     ns = IDLE;
    61                                                           else
    62              1                       5408                     ns = READ_ADD;
    63                                                       end
    64                                                       READ_DATA : begin
    65                                                           if (SS_n)
    66              1                        340                     ns = IDLE;
    67                                                           else
    68              1                       4744                     ns = READ_DATA;
    69                                                       end
    70                                                   endcase
    71                                               end
    72                                               
    73              1                      45717     always @(posedge clk) begin
    74                                                   if (~rst_n) begin 
    75              1                       1075             rx_data <= 0;
    76              1                       1075             rx_valid <= 0;
    77              1                       1075             received_address <= 0;
    78              1                       1075             MISO <= 0;
    79              1                       1075             counter <= 0; // bug: reset counter on reset
    80                                                   end
    81                                                   else begin
    82                                                       case (cs)
    83                                                           IDLE : begin
    84              1                       3888                     rx_valid <= 0;
    85                                                           end
    86                                                           CHK_CMD : begin
    87              1                       3257                     counter <= 10;
    88                                                           end
    89                                                           WRITE : begin
    90                                                               if (counter > 0) begin
    91              1                      16578                         rx_data[counter-1] <= MOSI;
    92              1                      16578                         counter <= counter - 1;
    93                                                               end
    94                                                               else begin
    95              1                       2882                         rx_valid <= 1;
    96                                                               end
    97                                                           end
    98                                                           READ_ADD : begin
    99                                                               if (counter > 0) begin
    100             1                       7112                         rx_data[counter-1] <= MOSI;
    101             1                       7112                         counter <= counter - 1;
    102                                                              end
    103                                                              else begin
    104             1                       1247                         rx_valid <= 1;
    105             1                       1247                         received_address <= 1;
    106                                                              end
    107                                                          end
    108                                                          READ_DATA : begin
    109                                                              if (tx_valid) begin
    110             1                       3758                         rx_valid <= 0; 
    111                                                                  if (counter > 0) begin
    112             1                       3082                             MISO <= tx_data[counter-1];
    113             1                       3082                             counter <= counter - 1;
    114                                                                  end
    115                                                                  else begin
    116             1                        676                             received_address <= 0;
    117                                                                  end
    118                                                              end
    119                                                              else begin
    120                                                                  if (counter > 0) begin
    121             1                       5475                             rx_data[counter-1] <= MOSI;
    122             1                       5475                             counter <= counter - 1;
    123                                                                  end
    124                                                                  else begin
    125             1                        445                             rx_valid <= 1;
    126             1                        445                             counter <= 9; // bug: add a cycle delay before sending MISO data

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        126        70        56    55.55%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/SLAVE_instance --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                     counter[31-4]           0           0                                0.00 
                                      counter[3-0]           1           1                              100.00 
                                                cs               ENUM type       Value       Count 
                                                                      IDLE        1255      100.00 
                                                                     WRITE        1224      100.00 
                                                                   CHK_CMD        1255      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                                ns               ENUM type       Value       Count 
                                                                      IDLE        1288      100.00 
                                                                     WRITE        1255      100.00 
                                                                   CHK_CMD        1582      100.00 
                                                                  READ_ADD         611      100.00 
                                                                 READ_DATA           1      100.00 
                                  received_address           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         68 
Toggled Node Count   =         40 
Untoggled Node Count =         28 

Toggle Coverage      =      55.55% (70 of 126 bins)

=================================================================================
=== Instance: /top/DUT/RAM_instance
=== Design Unit: work.RAM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         7         7         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/RAM_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM.sv
------------------------------------IF Branch------------------------------------
    15                                     22660     Count coming in to IF
    15              1                       1073         if (~rst_n) begin
    22              1                       4886             if (rx_valid) begin
                                           16701     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    23                                      4886     Count coming in to CASE
    24              1                       1618                     2'b00   : Wr_Addr       <= din[7:0];
    25              1                       1194                     2'b01   : MEM[Wr_Addr]  <= din[7:0];
    26              1                       1214                     2'b10   : Rd_Addr       <= din[7:0];
    27              1                        860                     2'b11   : dout          <= MEM[Rd_Addr]; // bug: Wr_Addr ==> Rd_Addr
Branch totals: 4 hits of 4 branches = 100.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      2         2         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/DUT/RAM_instance --

  File SPI_RAM.sv
----------------Focused Expression View-----------------
Line       31 Item    1  (din[9] && din[8])
Expression totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      din[9]         Y
      din[8]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  din[9]_0              -                             
  Row   2:          1  din[9]_1              din[8]                        
  Row   3:          1  din[8]_0              din[9]                        
  Row   4:          1  din[8]_1              din[9]                        


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/RAM_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM.sv
    1                                                module RAM (
    2                                                    input  logic        clk,
    3                                                    input  logic        rst_n,
    4                                                    input  logic        rx_valid,
    5                                                    input  logic [9:0]  din,
    6                                                    output logic [7:0]  dout,
    7                                                    output logic        tx_valid
    8                                                );
    9                                                
    10                                               reg [7:0] MEM [255:0];
    11                                               
    12                                               reg [7:0] Rd_Addr, Wr_Addr;
    13                                               
    14              1                      22660     always @(posedge clk) begin
    15                                                   if (~rst_n) begin
    16              1                       1073             dout      <= 0;
    17              1                       1073             tx_valid  <= 0;
    18              1                       1073             Rd_Addr   <= 0;
    19              1                       1073             Wr_Addr   <= 0;
    20                                                   end
    21                                                   else
    22                                                       if (rx_valid) begin
    23                                                           case (din[9:8])
    24              1                       1618                     2'b00   : Wr_Addr       <= din[7:0];
    25              1                       1194                     2'b01   : MEM[Wr_Addr]  <= din[7:0];
    26              1                       1214                     2'b10   : Rd_Addr       <= din[7:0];
    27              1                        860                     2'b11   : dout          <= MEM[Rd_Addr]; // bug: Wr_Addr ==> Rd_Addr
    28                                                               default : dout          <= 0;
    29                                                           endcase
    30                                                           //bug: tx_valid signal should only be updated when rx_valid is high, not on every clock cycle.
    31              1                       4886                 tx_valid <= (din[9] && din[8])? 1'b1 : 1'b0; 

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/RAM_instance --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                      Rd_Addr[7-0]           1           1                              100.00 
                                      Wr_Addr[7-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.WRAPPER
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         40        40         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                  rx_data_din[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                 tx_data_dout[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         20 
Toggled Node Count   =         20 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (40 of 40 bins)

=================================================================================
=== Instance: /top/golden_model/Slave_instance
=== Design Unit: work.Golden_slave
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        31        30         1    96.77%

================================Branch Details================================

Branch Coverage for instance /top/golden_model/Slave_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Golden_Slave.sv
------------------------------------IF Branch------------------------------------
    24                                     46219     Count coming in to IF
    24              1                       1076             if (~rst_n) begin 
    32              1                      45143             else begin 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    52                                     69644     Count coming in to CASE
    53              1                       7861                 IDLE: begin
    59              1                       4978                 CHK_CMD: begin 
    69              1                      29569                 WRITE: begin
    81              1                      13149                 READ_ADD: begin
    95              1                      14086                 READ_DATA: begin 
                                               1     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                      7861     Count coming in to IF
    56              1                       4394                     if (~SS_n)                  next_state = CHK_CMD;
                                            3467     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                      4978     Count coming in to IF
    60              1                    ***0***                     if      (SS_n)              next_state = IDLE;
    61              1                       2617                     else if (~MOSI)             next_state = WRITE;
    62              1                       2361                     else begin
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    63                                      2361     Count coming in to IF
    63              1                        598                         if  (rd_addr_loaded)    next_state = READ_DATA;
    64              1                       1763                         else                    next_state = READ_ADD;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                     29569     Count coming in to IF
    70              1                       1460                     if (SS_n)                   next_state = IDLE;
                                           28109     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                     29569     Count coming in to IF
    72              1                      24392                     if (counter_ref > 0) begin
    78              1                       5177                     else next_rx_valid = 1;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    82                                     13149     Count coming in to IF
    82              1                        629                     if (SS_n)                   next_state = IDLE;
                                           12520     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    84                                     13149     Count coming in to IF
    84              1                      10927                     if (counter_ref > 0) begin
    89              1                       2222                     else begin 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    96                                     14086     Count coming in to IF
    96              1                        340                     if (SS_n)                   next_state = IDLE;
                                           13746     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    98                                     14086     Count coming in to IF
    98              1                       5763                     if (tx_valid) // Data is ready to be serialed out on MISO
    107             1                       8323                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                     5763     Count coming in to IF
    101             1                       4567                         if (counter_ref > 0) begin 
    105             1                       1196                         else next_rd_addr_loaded = 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    108                                     8323     Count coming in to IF
    108             1                       7639                         if (counter_ref > 0) begin
    112             1                        684                         else begin 
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/golden_model/Slave_instance --

  File Golden_Slave.sv
----------------Focused Condition View-------------------
Line       72 Item    1  (counter_ref > 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_ref > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_ref > 0)_0   -                             
  Row   2:          1  (counter_ref > 0)_1   -                             

----------------Focused Condition View-------------------
Line       84 Item    1  (counter_ref > 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_ref > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_ref > 0)_0   -                             
  Row   2:          1  (counter_ref > 0)_1   -                             

----------------Focused Condition View-------------------
Line       101 Item    1  (counter_ref > 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_ref > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_ref > 0)_0   -                             
  Row   2:          1  (counter_ref > 0)_1   -                             

----------------Focused Condition View-------------------
Line       108 Item    1  (counter_ref > 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_ref > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_ref > 0)_0   -                             
  Row   2:          1  (counter_ref > 0)_1   -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/golden_model/Slave_instance --

FSM_ID: state
    Current State Object : state
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  53                IDLE                   0
  59             CHK_CMD                   2
  81            READ_ADD                   3
  95           READ_DATA                   4
  69               WRITE                   1
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                4507          
                 CHK_CMD                3336          
                READ_ADD                8545          
               READ_DATA                9923          
                   WRITE               19908          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  56                   0                3336          IDLE -> CHK_CMD               
  64                   1                 805          CHK_CMD -> READ_ADD           
  63                   2                 581          CHK_CMD -> READ_DATA          
  61                   3                1871          CHK_CMD -> WRITE              
  60                   4                  79          CHK_CMD -> IDLE               
  82                   5                 805          READ_ADD -> IDLE              
  96                   6                 580          READ_DATA -> IDLE             
  70                   7                1871          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      45        44         1    97.77%

================================Statement Details================================

Statement Coverage for instance /top/golden_model/Slave_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Golden_Slave.sv
    1                                                module Golden_slave(
    2                                                    input  logic             clk,
    3                                                    input  logic             MOSI,
    4                                                    input  logic             rst_n,
    5                                                    input  logic             SS_n,
    6                                                    input  logic             tx_valid,
    7                                                    input  logic [7:0]       tx_data,
    8                                                    output logic [9:0]       rx_data_ref,
    9                                                    output logic             rx_valid_ref,
    10                                                   output logic             MISO_ref
    11                                               );
    12                                                   import SPI_slave_shared_pkg::*;
    13                                               
    14                                                   // FSM signals
    15                                                   SPI_slave_state_e   state          ,next_state;
    16                                                   reg                                 next_rx_valid;
    17                                                   reg [9:0]                           next_rx_data;
    18                                                   reg                                 next_MISO;
    19                                                   reg                 rd_addr_loaded ,next_rd_addr_loaded;
    20                                                   int                 counter_ref    ,next_counter_ref;
    21                                                    
    22                                                   // state memory
    23              1                      46219         always @ (posedge clk) begin 
    24                                                       if (~rst_n) begin 
    25              1                       1076                 state           <= IDLE;
    26              1                       1076                 rd_addr_loaded  <= 0;
    27              1                       1076                 rx_valid_ref    <= 0;
    28              1                       1076                 MISO_ref        <= 0;
    29              1                       1076                 rx_data_ref     <= 0;
    30              1                       1076                 counter_ref     <= 0;
    31                                                       end
    32                                                       else begin 
    33              1                      45143                 state           <= next_state;
    34              1                      45143                 rd_addr_loaded  <= next_rd_addr_loaded;
    35              1                      45143                 rx_valid_ref    <= next_rx_valid;
    36              1                      45143                 MISO_ref        <= next_MISO;
    37              1                      45143                 rx_data_ref     <= next_rx_data;
    38              1                      45143                 counter_ref     <= next_counter_ref;
    39                                                       end
    40                                                   end
    41                                               
    42                                                   // next state logic
    43              1                      69644         always @(*) begin
    44                                                       // default 
    45              1                      69644             next_state          = state;
    46              1                      69644             next_rd_addr_loaded = rd_addr_loaded;
    47              1                      69644             next_rx_valid   = rx_valid_ref;
    48              1                      69644             next_MISO       = MISO_ref;
    49              1                      69644             next_rx_data    = rx_data_ref;
    50              1                      69644             next_counter_ref    = counter_ref;
    51                                               
    52                                                       case (state)
    53                                                           IDLE: begin
    54              1                       7861                     next_rx_valid   = 0;
    55                                               
    56              1                       4394                     if (~SS_n)                  next_state = CHK_CMD;
    57                                                           end
    58                                               
    59                                                           CHK_CMD: begin 
    60              1                    ***0***                     if      (SS_n)              next_state = IDLE;
    61              1                       2617                     else if (~MOSI)             next_state = WRITE;
    62                                                               else begin
    63              1                        598                         if  (rd_addr_loaded)    next_state = READ_DATA;
    64              1                       1763                         else                    next_state = READ_ADD;
    65                                                               end
    66              1                       4978                     next_counter_ref = 10;
    67                                                           end
    68                                               
    69                                                           WRITE: begin
    70              1                       1460                     if (SS_n)                   next_state = IDLE;
    71                                               
    72                                                               if (counter_ref > 0) begin
    73              1                      24392                         next_rx_data [next_counter_ref-1] = MOSI;
    74              1                      24392                         next_counter_ref = counter_ref - 1;
    75                                               
    76                                                               end
    77                                               
    78              1                       5177                     else next_rx_valid = 1;
    79                                                           end
    80                                               
    81                                                           READ_ADD: begin
    82              1                        629                     if (SS_n)                   next_state = IDLE;
    83                                               
    84                                                               if (counter_ref > 0) begin
    85              1                      10927                         next_rx_data [next_counter_ref-1] = MOSI;
    86              1                      10927                         next_counter_ref = counter_ref - 1;
    87                                               
    88                                                               end
    89                                                               else begin 
    90              1                       2222                         next_rx_valid = 1;
    91              1                       2222                         next_rd_addr_loaded = 1;
    92                                                               end
    93                                                           end
    94                                               
    95                                                           READ_DATA: begin 
    96              1                        340                     if (SS_n)                   next_state = IDLE;
    97                                               
    98                                                               if (tx_valid) // Data is ready to be serialed out on MISO
    99                                                               begin 
    100             1                       5763                         next_rx_valid = 0;
    101                                                                  if (counter_ref > 0) begin 
    102             1                       4567                             next_counter_ref = counter_ref - 1;  
    103             1                       4567                             next_MISO = tx_data[counter_ref-1];
    104                                                                  end
    105             1                       1196                         else next_rd_addr_loaded = 0;
    106                                                              end
    107                                                              else begin
    108                                                                  if (counter_ref > 0) begin
    109             1                       7639                         next_rx_data [next_counter_ref-1] = MOSI;
    110             1                       7639                         next_counter_ref = counter_ref - 1;
    111                                                                  end
    112                                                                  else begin 
    113             1                        684                             next_rx_valid = 1;
    114             1                        684                             next_counter_ref = 9;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        216       104       112    48.14%

================================Toggle Details================================

Toggle Coverage for instance /top/golden_model/Slave_instance --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                          MISO_ref           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                 counter_ref[31-4]           0           0                                0.00 
                                  counter_ref[3-0]           1           1                              100.00 
                                         next_MISO           1           1                              100.00 
                            next_counter_ref[31-4]           0           0                                0.00 
                             next_counter_ref[3-0]           1           1                              100.00 
                               next_rd_addr_loaded           1           1                              100.00 
                                 next_rx_data[9-0]           1           1                              100.00 
                                     next_rx_valid           1           1                              100.00 
                                        next_state               ENUM type       Value       Count 
                                                                      IDLE        1613      100.00 
                                                                     WRITE         651      100.00 
                                                                   CHK_CMD        1917      100.00 
                                                                  READ_ADD         614      100.00 
                                                                 READ_DATA           1      100.00 
                                    rd_addr_loaded           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                  rx_data_ref[9-0]           1           1                              100.00 
                                      rx_valid_ref           1           1                              100.00 
                                             state               ENUM type       Value       Count 
                                                                      IDLE        1255      100.00 
                                                                     WRITE        1224      100.00 
                                                                   CHK_CMD        1255      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =        113 
Toggled Node Count   =         57 
Untoggled Node Count =         56 

Toggle Coverage      =      48.14% (104 of 216 bins)

=================================================================================
=== Instance: /top/golden_model/Ram_instance
=== Design Unit: work.Golden_ram
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         7         1    87.50%

================================Branch Details================================

Branch Coverage for instance /top/golden_model/Ram_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Golden_Ram.sv
------------------------------------IF Branch------------------------------------
    14                                     22660     Count coming in to IF
    14              1                       1073             if (!rst_n) begin
    20              1                       4886             else if (rx_valid) begin
                                           16701     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    21                                      4886     Count coming in to IF
    21              1                       1618                 if (din[9:8] == 2'b00) begin
    25              1                       1194                 else if (din[9:8] == 2'b01) begin
    29              1                       1214                 else if (din[9:8] == 2'b10) begin
    33              1                        860                 else if (din[9:8] == 2'b11) begin
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         3         1    75.00%

================================Condition Details================================

Condition Coverage for instance /top/golden_model/Ram_instance --

  File Golden_Ram.sv
----------------Focused Condition View-------------------
Line       21 Item    1  (din[9:8] == 0)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (din[9:8] == 0)_0     -                             
  Row   2:          1  (din[9:8] == 0)_1     -                             

----------------Focused Condition View-------------------
Line       25 Item    1  (din[9:8] == 1)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (din[9:8] == 1)_0     -                             
  Row   2:          1  (din[9:8] == 1)_1     -                             

----------------Focused Condition View-------------------
Line       29 Item    1  (din[9:8] == 2)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (din[9:8] == 2)_0     -                             
  Row   2:          1  (din[9:8] == 2)_1     -                             

----------------Focused Condition View-------------------
Line       33 Item    1  (din[9:8] == 3)
Condition totals: 0 of 1 input term covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 3)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (din[9:8] == 3)_0     -                             
  Row   2:          1  (din[9:8] == 3)_1     -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13        13         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/golden_model/Ram_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Golden_Ram.sv
    1                                                module Golden_ram (
    2                                                    input  logic        clk,
    3                                                    input  logic        rst_n,
    4                                                    input  logic        rx_valid,
    5                                                    input  logic [9:0]  din,
    6                                                    output logic [7:0]  dout_ref,
    7                                                    output logic        tx_valid_ref
    8                                                );
    9                                                
    10                                                   reg [7:0] mem [255:0];
    11                                                   reg [7:0] rd_address, wr_address;
    12                                               
    13              1                      22660         always @(posedge clk) begin
    14                                                       if (!rst_n) begin
    15              1                       1073                 dout_ref <= 0;
    16              1                       1073                 tx_valid_ref <= 0;
    17              1                       1073                 rd_address <= 0;
    18              1                       1073                 wr_address <= 0;
    19                                                       end 
    20                                                       else if (rx_valid) begin
    21                                                           if (din[9:8] == 2'b00) begin
    22              1                       1618                     wr_address <= din[7:0];
    23              1                       1618                     tx_valid_ref <= 0; 
    24                                                           end 
    25                                                           else if (din[9:8] == 2'b01) begin
    26              1                       1194                     mem[wr_address] <= din[7:0];
    27              1                       1194                     tx_valid_ref <= 0; 
    28                                                           end
    29                                                           else if (din[9:8] == 2'b10) begin
    30              1                       1214                     rd_address <= din[7:0];
    31              1                       1214                     tx_valid_ref <= 0; 
    32                                                           end
    33                                                           else if (din[9:8] == 2'b11) begin
    34              1                        860                     dout_ref <= mem[rd_address];
    35              1                        860                     tx_valid_ref <= 1; 

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/golden_model/Ram_instance --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                     dout_ref[7-0]           1           1                              100.00 
                                   rd_address[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_valid_ref           1           1                              100.00 
                                   wr_address[7-0]           1           1                              100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/golden_model
=== Design Unit: work.Golden_wrapper
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         40        40         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/golden_model --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         20 
Toggled Node Count   =         20 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (40 of 40 bins)

=================================================================================
=== Instance: /top/wrapper_sva
=== Design Unit: work.Wrapper_sva
=================================================================================

Assertion Coverage:
    Assertions                       4         4         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/wrapper_sva/assert__write_data_stable_MISO
                     Wrapper_sva.sv(39)                 0          1
/top/wrapper_sva/assert__read_add_stable_MISO
                     Wrapper_sva.sv(38)                 0          1
/top/wrapper_sva/assert__write_add_stable_MISO
                     Wrapper_sva.sv(37)                 0          1
/top/wrapper_sva/assert__reset_check
                     Wrapper_sva.sv(36)                 0          1

Directive Coverage:
    Directives                       4         4         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/wrapper_sva/cover__write_data_stable_MISO 
                                         Wrapper_sva Verilog  SVA  Wrapper_sva.sv(44)
                                                                               605 Covered   
/top/wrapper_sva/cover__read_add_stable_MISO 
                                         Wrapper_sva Verilog  SVA  Wrapper_sva.sv(43)
                                                                               619 Covered   
/top/wrapper_sva/cover__write_add_stable_MISO 
                                         Wrapper_sva Verilog  SVA  Wrapper_sva.sv(42)
                                                                               818 Covered   
/top/wrapper_sva/cover__reset_check      Wrapper_sva Verilog  SVA  Wrapper_sva.sv(41)
                                                                              1076 Covered   

=================================================================================
=== Instance: /top/spi_slave_sva
=== Design Unit: work.SPI_slave_sva
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/spi_slave_sva/assert__SS_n_eventually_after_10_cycles
                     SPI_slave_sva.sv(34)               0          1
/top/spi_slave_sva/assert__rx_valid_after_10_cycles
                     SPI_slave_sva.sv(33)               0          1
/top/spi_slave_sva/assert__reset_check
                     SPI_slave_sva.sv(32)               0          1

Directive Coverage:
    Directives                       3         3         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/spi_slave_sva/cover__SS_n_eventually_after_10_cycles 
                                         SPI_slave_sva Verilog  SVA  SPI_slave_sva.sv(39)
                                                                              2377 Covered   
/top/spi_slave_sva/cover__rx_valid_after_10_cycles 
                                         SPI_slave_sva Verilog  SVA  SPI_slave_sva.sv(38)
                                                                              2480 Covered   
/top/spi_slave_sva/cover__reset_check    SPI_slave_sva Verilog  SVA  SPI_slave_sva.sv(37)
                                                                              1076 Covered   

=================================================================================
=== Instance: /top/ram_sva
=== Design Unit: work.Ram_sva
=================================================================================

Assertion Coverage:
    Assertions                       5         5         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/ram_sva/assert__read_addr_read_data
                     Ram_sva.sv(51)                     0          1
/top/ram_sva/assert__write_addr_write_data
                     Ram_sva.sv(50)                     0          1
/top/ram_sva/assert__other_tx_valid
                     Ram_sva.sv(49)                     0          1
/top/ram_sva/assert__read_data_tx_valid
                     Ram_sva.sv(48)                     0          1
/top/ram_sva/assert__reset
                     Ram_sva.sv(47)                     0          1

Directive Coverage:
    Directives                       5         5         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/ram_sva/cover__read_addr_read_data  Ram_sva Verilog  SVA  Ram_sva.sv(58)   876 Covered   
/top/ram_sva/cover__write_addr_write_data 
                                         Ram_sva Verilog  SVA  Ram_sva.sv(57)   954 Covered   
/top/ram_sva/cover__other_tx_valid       Ram_sva Verilog  SVA  Ram_sva.sv(56)  3937 Covered   
/top/ram_sva/cover__read_data_tx_valid   Ram_sva Verilog  SVA  Ram_sva.sv(55)   468 Covered   
/top/ram_sva/cover__reset                Ram_sva Verilog  SVA  Ram_sva.sv(54)  1076 Covered   

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      28        28         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_top.sv
    6                                                module top ();
    7                                                
    8                                                    bit clk;
    9               1                      92439         always #5 clk = ~clk;
    9               2                      92438     
    10                                               
    11                                                   Ram_if rif(clk);
    12                                                   SPI_slave_if sif(clk);
    13                                                   Wrapper_if wif(clk);
    14                                               
    15                                                   WRAPPER DUT (wif);
    16                                                   Golden_wrapper golden_model (wif);
    17                                               
    18              1                       2107         assign sif.rst_n           = DUT.SLAVE_instance.rst_n;
    19              1                       6863         assign sif.SS_n            = DUT.SLAVE_instance.SS_n;
    20              1                      20051         assign sif.MOSI            = DUT.SLAVE_instance.MOSI;
    21              1                        694         assign sif.tx_data         = DUT.SLAVE_instance.tx_data;
    22              1                        878         assign sif.tx_valid        = DUT.SLAVE_instance.tx_valid;
    23              1                       9930         assign sif.cs              = DUT.SLAVE_instance.cs;
    24              1                       5070         assign sif.rx_valid        = DUT.SLAVE_instance.rx_valid;
    25              1                      14545         assign sif.rx_data         = DUT.SLAVE_instance.rx_data;
    26              1                       1235         assign sif.MISO            = DUT.SLAVE_instance.MISO;
    27              1                       9930         assign sif.cs_ref          = golden_model.Slave_instance.state;
    28              1                      14545         assign sif.rx_data_ref     = golden_model.Slave_instance.rx_data_ref;
    29              1                       5070         assign sif.rx_valid_ref    = golden_model.Slave_instance.rx_valid_ref;
    30              1                       1235         assign sif.MISO_ref        = golden_model.Slave_instance.MISO_ref;
    31              1                       4485         assign sif.array_for_MOSI  = wif.array_for_MOSI;
    32                                               
    33              1                       2107         assign rif.rst_n           = DUT.RAM_instance.rst_n;
    34              1                       5070         assign rif.rx_valid        = DUT.RAM_instance.rx_valid;
    35              1                      14545         assign rif.din             = DUT.RAM_instance.din;
    36              1                        694         assign rif.dout            = DUT.RAM_instance.dout;
    37              1                        878         assign rif.tx_valid        = DUT.RAM_instance.tx_valid;
    38              1                        694         assign rif.dout_ref        = golden_model.Ram_instance.dout_ref;
    39              1                        878         assign rif.tx_valid_ref    = golden_model.Ram_instance.tx_valid_ref;
    40                                               
    41              1                       9930         assign wif.cs = SPI_slave_state_e'(DUT.SLAVE_instance.cs);
    42                                               
    43                                                   Wrapper_sva wrapper_sva (wif);
    44                                                   SPI_slave_sva spi_slave_sva (sif);
    45                                                   Ram_sva ram_sva (rif);
    46                                               
    47                                                   initial begin
    48              1                          1             uvm_config_db#(virtual Ram_if)::set(null, "uvm_test_top", "ram_vif", rif);
    49              1                          1             uvm_config_db#(virtual SPI_slave_if)::set(null, "uvm_test_top", "slave_vif", sif);
    50              1                          1             uvm_config_db#(virtual Wrapper_if)::set(null, "uvm_test_top", "wrapper_vif", wif);
    51              1                          1             run_test("Wrapper_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /Wrapper_config_pkg
=== Design Unit: work.Wrapper_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /Wrapper_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_cfg.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(Wrapper_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(Wrapper_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(Wrapper_cfg)
    6               4                    ***0***             `uvm_object_utils(Wrapper_cfg)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(Wrapper_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(Wrapper_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Wrapper_config_pkg --

  File Wrapper_cfg.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /Wrapper_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_cfg.sv
    1                                                package Wrapper_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh" 
    4                                                
    5                                                    class Wrapper_cfg extends uvm_object;
    6               1                    ***0***             `uvm_object_utils(Wrapper_cfg)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual Wrapper_if Wrapper_vif;
    8                                                        uvm_active_passive_enum is_active;
    9                                                
    10                                                       function new(string name = "Wrapper_cfg");
    11              1                          1                 super.new(name);


=================================================================================
=== Instance: /Wrapper_seq_item_pkg
=== Design Unit: work.Wrapper_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13         5         8    38.46%

================================Branch Details================================

Branch Coverage for instance /Wrapper_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(Wrapper_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                      46219     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(Wrapper_seq_item)
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(Wrapper_seq_item)
    7               4                    ***0***             `uvm_object_utils(Wrapper_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                      46219     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(Wrapper_seq_item)
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(Wrapper_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                     46218     Count coming in to IF
    71              1                       1075                 if (rst_n == 0) begin
    74              1                       3431                 else if (SS_n == 1) counter = 1;
    75              1                      41712                 else counter++;
Branch totals: 3 hits of 3 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Wrapper_seq_item_pkg --

  File Wrapper_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         7        10    41.17%

================================Statement Details================================

Statement Coverage for instance /Wrapper_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_seq_item.sv
    1                                                package Wrapper_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_shared_pkg::*;
    5                                                
    6                                                    class Wrapper_seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(Wrapper_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                      46219     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                      46219     
    7              10                    ***0***     
    8                                                
    9                                                        rand bit            SS_n, rst_n, MOSI;
    10                                                       bit                 MISO, MISO_ref;
    11                                                       rand bit [10:0]     array_for_MOSI;
    12                                                       int                 counter;
    13                                                       SPI_slave_state_e   cs;
    14                                               
    15                                                       bit [2:0] old_operation;
    16                                               
    17                                                       function new(string name = "Wrapper_seq_item");
    18              1                      92444                 super.new(name);
    19                                                       endfunction : new
    20                                               
    21                                                       function string convert2string();
    22              1                    ***0***                 return $sformatf("%s SS_n=%b, rst_n=%b, MOSI=%b, array_for_MOSI=0x%0h, MISO=%b, MISO_ref=%b",
    23                                                                super.convert2string(), SS_n, rst_n, MOSI, array_for_MOSI, MISO, MISO_ref);
    24                                                       endfunction : convert2string
    25                                               
    26                                                       function string convert2string_stimulus();
    27              1                    ***0***                 return $sformatf("SS_n=%b, rst_n=%b, MOSI=%b, array_for_MOSI=0x%0h",
    28                                                                SS_n, rst_n, MOSI, array_for_MOSI);
    29                                                       endfunction : convert2string_stimulus
    30                                               
    31                                                       constraint c_rst_n { rst_n dist {0 := 1, 1 := 40}; }
    32                                               
    33                                                       constraint c_SS_n { 
    34                                                           if (cs == SPI_slave_state_e'(READ_DATA)) SS_n == (counter % 24 == 0);
    35                                                           else SS_n == (counter % 14 == 0); 
    36                                                           }
    37                                               
    38                                                       constraint c_array_for_MOSI { 
    39                                                           array_for_MOSI[10:8] inside {WRITE_DATA, WRITE_ADDR, READ_DATAA, READ_ADDR}; 
    40                                                           }
    41                                               
    42                                                       constraint c_array_for_MOSI_write_only {
    43                                                               array_for_MOSI[10:8] inside {WRITE_DATA, WRITE_ADDR};
    44                                                           }
    45                                               
    46                                                       constraint c_array_for_MOSI_read_only {
    47                                                           if (old_operation == READ_ADDR)
    48                                                               array_for_MOSI[10:8] == READ_DATAA;
    49                                                           else
    50                                                               array_for_MOSI[10:8] == READ_ADDR;
    51                                                           }
    52                                               
    53                                                       constraint c_array_for_MOSI_read_write { 
    54                                                           if (old_operation == WRITE_ADDR)
    55                                                               array_for_MOSI[10:8] inside {WRITE_DATA, WRITE_ADDR};
    56                                               
    57                                                           else if (old_operation == WRITE_DATA)
    58                                                               array_for_MOSI[10:8] dist {READ_ADDR := 60, WRITE_ADDR := 40};
    59                                               
    60                                                           else if (old_operation == READ_ADDR)
    61                                                               array_for_MOSI[10:8] == READ_DATAA;
    62                                               
    63                                                           else
    64                                                               array_for_MOSI[10:8] dist {WRITE_ADDR := 60, READ_ADDR := 40};
    65                                                           }
    66                                                           
    67                                               
    68                                                       function void post_randomize();
    69              1                      46218                 old_operation = array_for_MOSI[10:8];
    70                                               
    71                                                           if (rst_n == 0) begin
    72              1                       1075                     counter = 0;
    73                                                           end
    74              1                       3431                 else if (SS_n == 1) counter = 1;
    75              1                      41712                 else counter++;


=================================================================================
=== Instance: /Wrapper_sequencer_pkg
=== Design Unit: work.Wrapper_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /Wrapper_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_sequencer.sv
    1                                                package Wrapper_sequencer_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                    import Wrapper_config_pkg::*;
    6                                                
    7                                                    class Wrapper_sequencer extends uvm_sequencer #(Wrapper_seq_item);
    8               1                    ***0***             `uvm_component_utils(Wrapper_sequencer)
    8               2                    ***0***     
    8               3                          2     
    9                                                        Wrapper_cfg cfg;
    10                                                       virtual Wrapper_if sequencer_vif;
    11                                               
    12                                                       function new(string name, uvm_component parent);
    13              1                          1                 super.new(name, parent);


=================================================================================
=== Instance: /Wrapper_reset_seq_pkg
=== Design Unit: work.Wrapper_reset_seq_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /Wrapper_reset_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_reset_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(Wrapper_reset_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(Wrapper_reset_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(Wrapper_reset_seq)
    9               4                    ***0***             `uvm_object_utils(Wrapper_reset_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(Wrapper_reset_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(Wrapper_reset_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Wrapper_reset_seq_pkg --

  File Wrapper_reset_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         9         8    52.94%

================================Statement Details================================

Statement Coverage for instance /Wrapper_reset_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_reset_seq.sv
    1                                                package Wrapper_reset_seq_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                    import Wrapper_sequencer_pkg::*;
    6                                                    import Wrapper_shared_pkg::*;
    7                                                
    8                                                    class Wrapper_reset_seq extends uvm_sequence #(Wrapper_seq_item);
    9               1                    ***0***             `uvm_object_utils(Wrapper_reset_seq)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10                                                       Wrapper_seq_item item;
    11                                               
    12                                                       function new(string name = "Wrapper_reset_seq");
    13              1                          1                 super.new(name);
    14                                                       endfunction : new
    15                                               
    16                                                       task body();
    17              1                          1                 item = Wrapper_seq_item::type_id::create("item");
    18              1                          1                 start_item(item);
    19              1                          1                 item.SS_n = 1;
    20              1                          1                 item.rst_n = 0;
    21              1                          1                 item.MOSI = 0;
    22              1                          1                 finish_item(item);


=================================================================================
=== Instance: /Wrapper_write_only_seq_pkg
=== Design Unit: work.Wrapper_write_only_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/Wrapper_write_only_seq_pkg/Wrapper_write_only_seq/body/#anonblk#99891559#21#4#/#ublk#99891559#25/immed__31
                     Wrapper_write_only_seq.sv(31)
                                                        0          1
/Wrapper_write_only_seq_pkg/Wrapper_write_only_seq/body/#anonblk#99891559#21#4#/#ublk#99891559#34/immed__41
                     Wrapper_write_only_seq.sv(41)
                                                        0          1
/Wrapper_write_only_seq_pkg/Wrapper_write_only_seq/body/#anonblk#99891559#21#4#/#ublk#99891559#44/immed__52
                     Wrapper_write_only_seq.sv(52)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        17         6        11    35.29%

================================Branch Details================================

Branch Coverage for instance /Wrapper_write_only_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_write_only_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(Wrapper_write_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(Wrapper_write_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(Wrapper_write_only_seq)
    9               4                    ***0***             `uvm_object_utils(Wrapper_write_only_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(Wrapper_write_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(Wrapper_write_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    10                                         1     Count coming in to IF
    10              1                    ***0***             `uvm_declare_p_sequencer (Wrapper_sequencer) 
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    10                                   ***0***     Count coming in to IF
    10              2                    ***0***             `uvm_declare_p_sequencer (Wrapper_sequencer) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                     15997     Count coming in to IF
    25              1                        367                         if (item.rst_n == 0) begin
    34              1                       1286                         else if (item.SS_n == 1) begin 
    44              1                      14344                         else begin
Branch totals: 3 hits of 3 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Wrapper_write_only_seq_pkg --

  File Wrapper_write_only_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      36        27         9    75.00%

================================Statement Details================================

Statement Coverage for instance /Wrapper_write_only_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_write_only_seq.sv
    1                                                package Wrapper_write_only_seq_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                    import Wrapper_sequencer_pkg::*;
    6                                                    import Wrapper_shared_pkg::*;
    7                                                
    8                                                    class Wrapper_write_only_seq extends uvm_sequence #(Wrapper_seq_item);
    9               1                    ***0***             `uvm_object_utils(Wrapper_write_only_seq)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10              1                          1             `uvm_declare_p_sequencer (Wrapper_sequencer) 
    10              2                    ***0***     
    11                                                       Wrapper_seq_item item;
    12                                               
    13                                                       function new(string name = "Wrapper_write_only_seq");
    14              1                          1                 super.new(name);
    15                                                       endfunction : new
    16                                               
    17                                                       task body();
    18              1                          1                 item = Wrapper_seq_item::type_id::create("item");
    19                                               
    20              1                       1000                 repeat (1000) begin
    21              1                       1000                     for (int i=10; i>=0; i--) begin
    21              2                      15997     
    22              1                      15997                         start_item(item);
    23              1                      15997                         item.cs = p_sequencer.sequencer_vif.cs; //get current SPI_slave state
    24                                               
    25                                                                   if (item.rst_n == 0) begin
    26              1                        367                             item.constraint_mode(0);
    27              1                        367                             item.c_SS_n.constraint_mode(1);
    28              1                        367                             item.c_rst_n.constraint_mode(1);
    29                                                                       // enable randomization to set all array bits to 1 during reset
    30              1                        367                             item.array_for_MOSI.rand_mode(1); 
    31                                                                       assert(item.randomize() with { item.array_for_MOSI == 11'h7FF; });
    32              1                        367                             i = 11;
    33                                                                   end
    34                                                                   else if (item.SS_n == 1) begin 
    35              1                       1286                             item.constraint_mode(1);
    36              1                       1286                             item.c_array_for_MOSI_write_only.constraint_mode(1);
    37              1                       1286                             item.c_array_for_MOSI_read_only.constraint_mode(0);
    38              1                       1286                             item.c_array_for_MOSI_read_write.constraint_mode(0);
    39                                                                       // enable randomization for new array when SS_n is high
    40              1                       1286                             item.array_for_MOSI.rand_mode(1); 
    41                                                                       assert(item.randomize());
    42              1                       1286                             i = 11;
    43                                                                   end
    44                                                                   else begin
    45              1                      14344                             item.constraint_mode(1);
    46              1                      14344                             item.c_array_for_MOSI_write_only.constraint_mode(0);
    47              1                      14344                             item.c_array_for_MOSI_read_only.constraint_mode(0);
    48              1                      14344                             item.c_array_for_MOSI_read_write.constraint_mode(0);
    49                                                                       // disable randomization to keep array values stable
    50              1                      14344                             item.array_for_MOSI.rand_mode(0); 
    51                                                                       // send array bits [10:0] sequentially to MOSI
    52                                                                       assert(item.randomize() with {item.MOSI == item.array_for_MOSI[i];}); 
    53                                                                   end
    54                                               
    55              1                      15997                         finish_item(item);


=================================================================================
=== Instance: /Wrapper_write_read_seq_pkg
=== Design Unit: work.Wrapper_write_read_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/Wrapper_write_read_seq_pkg/Wrapper_write_read_seq/body/#anonblk#20872807#21#4#/#ublk#20872807#25/immed__31
                     Wrapper_write_read_seq.sv(31)
                                                        0          1
/Wrapper_write_read_seq_pkg/Wrapper_write_read_seq/body/#anonblk#20872807#21#4#/#ublk#20872807#34/immed__41
                     Wrapper_write_read_seq.sv(41)
                                                        0          1
/Wrapper_write_read_seq_pkg/Wrapper_write_read_seq/body/#anonblk#20872807#21#4#/#ublk#20872807#44/immed__52
                     Wrapper_write_read_seq.sv(52)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        17         6        11    35.29%

================================Branch Details================================

Branch Coverage for instance /Wrapper_write_read_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_write_read_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(Wrapper_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(Wrapper_write_read_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(Wrapper_write_read_seq)
    9               4                    ***0***             `uvm_object_utils(Wrapper_write_read_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(Wrapper_write_read_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(Wrapper_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    10                                         1     Count coming in to IF
    10              1                    ***0***             `uvm_declare_p_sequencer (Wrapper_sequencer) 
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    10                                   ***0***     Count coming in to IF
    10              2                    ***0***             `uvm_declare_p_sequencer (Wrapper_sequencer) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                     15542     Count coming in to IF
    25              1                        378                         if (item.rst_n == 0) begin
    34              1                       1170                         else if (item.SS_n == 1) begin 
    44              1                      13994                         else begin
Branch totals: 3 hits of 3 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Wrapper_write_read_seq_pkg --

  File Wrapper_write_read_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      36        27         9    75.00%

================================Statement Details================================

Statement Coverage for instance /Wrapper_write_read_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_write_read_seq.sv
    1                                                package Wrapper_write_read_seq_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                    import Wrapper_sequencer_pkg::*;
    6                                                    import Wrapper_shared_pkg::*;
    7                                                
    8                                                    class Wrapper_write_read_seq extends uvm_sequence #(Wrapper_seq_item);
    9               1                    ***0***             `uvm_object_utils(Wrapper_write_read_seq)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10              1                          1             `uvm_declare_p_sequencer (Wrapper_sequencer) 
    10              2                    ***0***     
    11                                                       Wrapper_seq_item item;
    12                                               
    13                                                       function new(string name = "Wrapper_write_read_seq");
    14              1                          1                 super.new(name);
    15                                                       endfunction : new
    16                                               
    17                                                       task body();
    18              1                          1                 item = Wrapper_seq_item::type_id::create("item");
    19                                               
    20              1                       1000                 repeat (1000) begin
    21              1                       1000                     for (int i=10; i>=0; i--) begin
    21              2                      15542     
    22              1                      15542                         start_item(item);
    23              1                      15542                         item.cs = p_sequencer.sequencer_vif.cs; //get current SPI_slave state
    24                                               
    25                                                                   if (item.rst_n == 0) begin
    26              1                        378                             item.constraint_mode(0);
    27              1                        378                             item.c_SS_n.constraint_mode(1);
    28              1                        378                             item.c_rst_n.constraint_mode(1);
    29                                                                       // enable randomization to set all array bits to 1 during reset
    30              1                        378                             item.array_for_MOSI.rand_mode(1); 
    31                                                                       assert(item.randomize() with { item.array_for_MOSI == 11'h7FF; });
    32              1                        378                             i = 11;
    33                                                                   end
    34                                                                   else if (item.SS_n == 1) begin 
    35              1                       1170                             item.constraint_mode(1);
    36              1                       1170                             item.c_array_for_MOSI_write_only.constraint_mode(0);
    37              1                       1170                             item.c_array_for_MOSI_read_only.constraint_mode(0);
    38              1                       1170                             item.c_array_for_MOSI_read_write.constraint_mode(1);
    39                                                                       // enable randomization for new array when SS_n is high
    40              1                       1170                             item.array_for_MOSI.rand_mode(1); 
    41                                                                       assert(item.randomize());
    42              1                       1170                             i = 11;
    43                                                                   end
    44                                                                   else begin
    45              1                      13994                             item.constraint_mode(1);
    46              1                      13994                             item.c_array_for_MOSI_write_only.constraint_mode(0);
    47              1                      13994                             item.c_array_for_MOSI_read_only.constraint_mode(0);
    48              1                      13994                             item.c_array_for_MOSI_read_write.constraint_mode(0);
    49                                                                       // disable randomization to keep array values stable
    50              1                      13994                             item.array_for_MOSI.rand_mode(0); 
    51                                                                       // send array bits [10:0] sequentially to MOSI
    52                                                                       assert(item.randomize() with { item.MOSI == item.array_for_MOSI[i]; });  
    53                                                                   end
    54              1                      15542                         finish_item(item);


=================================================================================
=== Instance: /Wrapper_read_only_seq_pkg
=== Design Unit: work.Wrapper_read_only_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/Wrapper_read_only_seq_pkg/Wrapper_read_only_seq/body/#anonblk#151086935#21#4#/#ublk#151086935#25/immed__31
                     Wrapper_read_only_seq.sv(31)
                                                        0          1
/Wrapper_read_only_seq_pkg/Wrapper_read_only_seq/body/#anonblk#151086935#21#4#/#ublk#151086935#34/immed__41
                     Wrapper_read_only_seq.sv(41)
                                                        0          1
/Wrapper_read_only_seq_pkg/Wrapper_read_only_seq/body/#anonblk#151086935#21#4#/#ublk#151086935#44/immed__52
                     Wrapper_read_only_seq.sv(52)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        17         6        11    35.29%

================================Branch Details================================

Branch Coverage for instance /Wrapper_read_only_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_read_only_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(Wrapper_read_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(Wrapper_read_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(Wrapper_read_only_seq)
    9               4                    ***0***             `uvm_object_utils(Wrapper_read_only_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(Wrapper_read_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(Wrapper_read_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    11                                         1     Count coming in to IF
    11              1                    ***0***             `uvm_declare_p_sequencer (Wrapper_sequencer) 
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    11                                   ***0***     Count coming in to IF
    11              2                    ***0***             `uvm_declare_p_sequencer (Wrapper_sequencer) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                     14679     Count coming in to IF
    25              1                        333                         if (item.rst_n == 0) begin
    34              1                        975                         else if (item.SS_n == 1) begin 
    44              1                      13371                         else begin 
Branch totals: 3 hits of 3 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Wrapper_read_only_seq_pkg --

  File Wrapper_read_only_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      36        27         9    75.00%

================================Statement Details================================

Statement Coverage for instance /Wrapper_read_only_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_read_only_seq.sv
    1                                                package Wrapper_read_only_seq_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                    import Wrapper_sequencer_pkg::*;
    6                                                    import Wrapper_shared_pkg::*;
    7                                                
    8                                                    class Wrapper_read_only_seq extends uvm_sequence #(Wrapper_seq_item);
    9               1                    ***0***             `uvm_object_utils(Wrapper_read_only_seq)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10                                                       Wrapper_seq_item item;
    11              1                          1             `uvm_declare_p_sequencer (Wrapper_sequencer) 
    11              2                    ***0***     
    12                                               
    13                                                       function new(string name = "Wrapper_read_only_seq");
    14              1                          1                 super.new(name);
    15                                                       endfunction : new
    16                                               
    17                                                       task body();
    18              1                          1                 item = Wrapper_seq_item::type_id::create("item");
    19                                               
    20              1                       1000                 repeat (1000) begin
    21              1                       1000                     for (int i=10; i>=0; i--) begin
    21              2                      14679     
    22              1                      14679                         start_item(item);
    23              1                      14679                         item.cs = p_sequencer.sequencer_vif.cs; //get current SPI_slave state
    24                                               
    25                                                                   if (item.rst_n == 0) begin
    26              1                        333                             item.constraint_mode(0);
    27              1                        333                             item.c_SS_n.constraint_mode(1);
    28              1                        333                             item.c_rst_n.constraint_mode(1);
    29                                                                       // enable randomization to set all array bits to 1 during reset
    30              1                        333                             item.array_for_MOSI.rand_mode(1); 
    31                                                                       assert(item.randomize() with { item.array_for_MOSI == 11'h7FF; });
    32              1                        333                             i = 11;
    33                                                                   end
    34                                                                   else if (item.SS_n == 1) begin 
    35              1                        975                             item.constraint_mode(1);
    36              1                        975                             item.c_array_for_MOSI_read_only.constraint_mode(1);
    37              1                        975                             item.c_array_for_MOSI_write_only.constraint_mode(0);
    38              1                        975                             item.c_array_for_MOSI_read_write.constraint_mode(0);
    39                                                                       // enable randomization for new array when SS_n is high
    40              1                        975                             item.array_for_MOSI.rand_mode(1); 
    41                                                                       assert(item.randomize());
    42              1                        975                             i = 11;
    43                                                                   end
    44                                                                   else begin 
    45              1                      13371                             item.constraint_mode(1);
    46              1                      13371                             item.c_array_for_MOSI_write_only.constraint_mode(0);
    47              1                      13371                             item.c_array_for_MOSI_read_write.constraint_mode(0);
    48              1                      13371                             item.c_array_for_MOSI_read_only.constraint_mode(0);
    49                                                                       // disable randomization to keep array values stable
    50              1                      13371                             item.array_for_MOSI.rand_mode(0); 
    51                                                                       // send array bits [10:0] sequentially to MOSI
    52                                                                       assert(item.randomize() with { item.MOSI == item.array_for_MOSI[i]; }); 
    53                                                                   end
    54              1                      14679                         finish_item(item);


=================================================================================
=== Instance: /Ram_seq_item_pkg
=== Design Unit: work.Ram_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /Ram_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(Ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(Ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(Ram_seq_item)
    7               4                    ***0***             `uvm_object_utils(Ram_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(Ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(Ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_seq_item_pkg --

  File Ram_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         1        13     7.14%

================================Statement Details================================

Statement Coverage for instance /Ram_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_seq_item.sv
    1                                                package Ram_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_shared_pkg::*;
    5                                                
    6                                                    class Ram_seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(Ram_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                
    9                                                        rand bit            rst_n, rx_valid;
    10                                                       rand bit [9:0]      din;
    11                                                       bit                 tx_valid, tx_valid_ref;
    12                                                       bit      [7:0]      dout, dout_ref;
    13                                                       bit      [1:0]      old_operation;
    14                                               
    15                                                       function new(string name = "Ram_seq_item");
    16              1                      46220                 super.new(name);
    17                                                       endfunction : new
    18                                               
    19                                                       function string convert2string();
    20              1                    ***0***                 return $sformatf("%s rst_n=%b, din=0x%0h, tx_valid=%b, dout=0x%0h, rx_valid=%b, dout_ref=0x%0h, tx_valid_ref=%b",
    21                                                                    super.convert2string(), rst_n, din, tx_valid, dout, rx_valid, dout_ref, tx_valid_ref);
    22                                                       endfunction : convert2string
    23                                               
    24                                                       function string convert2string_stimulus();
    25              1                    ***0***                 return $sformatf("rst_n=%b, din=0x%0h, tx_valid=%b",
    26                                                                    rst_n, din, tx_valid);
    27                                                       endfunction : convert2string_stimulus
    28                                               
    29                                                       constraint c_rst_n { rst_n dist {0 := 1, 1 := 9}; }
    30                                               
    31                                                       constraint c_rx_valid { rx_valid dist {0 := 1, 1 := 9};}
    32                                               
    33                                                       constraint c_din_write_only {
    34                                                               din[9:8] inside {WRITE_DATA, WRITE_ADDR};
    35                                                           }
    36                                               
    37                                                       constraint c_din_read_only {
    38                                                               din[9:8] inside {READ_DATA, READ_ADDR};
    39                                                               if (old_operation == READ_ADDR)
    40                                                                   din[9:8] == READ_DATA;
    41                                                               else
    42                                                                   din[9:8] == READ_ADDR;
    43                                                           }
    44                                               
    45                                                       constraint c_din_read_write { 
    46                                                           if      (old_operation == WRITE_ADDR)
    47                                                               din[9:8] inside {WRITE_DATA, WRITE_ADDR};
    48                                               
    49                                                           else if (old_operation == WRITE_DATA)
    50                                                               din[9:8] dist {READ_ADDR := 60, WRITE_ADDR := 40};
    51                                               
    52                                                           else if (old_operation == READ_ADDR)
    53                                                               din[9:8] == READ_DATA;
    54                                               
    55                                                           else
    56                                                               din[9:8] dist {WRITE_ADDR := 60, READ_ADDR := 40};
    57                                                           }
    58                                               
    59                                                       function void post_randomize();
    60              1                    ***0***                 old_operation = din[9:8];


=================================================================================
=== Instance: /Ram_coverage_pkg
=== Design Unit: work.Ram_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          5        na        na        na
            Covergroup Bins         13        13         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /Ram_coverage_pkg/Ram_coverage/cg_Ram           100.00%        100          -    Covered              
    covered/total bins:                                    13         13          -                      
    missing/total bins:                                     0         13          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_din                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_rx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_tx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_din_rx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_din_tx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/Ram_coverage_pkg::Ram_coverage::cg_Ram  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    13         13          -                      
    missing/total bins:                                     0         13          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_din                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        bin all_values[0]                               17122          1          -    Covered              
        bin all_values[1]                                9231          1          -    Covered              
        bin all_values[2]                                9762          1          -    Covered              
        bin all_values[3]                               10104          1          -    Covered              
        bin read_data                                   10104          1          -    Covered              
        bin wr_addr_2_wr_data                             540          1          -    Covered              
        bin rd_addr_2_rd_addr                             546          1          -    Covered              
    Coverpoint cp_rx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin rx_valid_0                                  41207          1          -    Covered              
        bin rx_valid_1                                   5012          1          -    Covered              
    Coverpoint cp_tx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin tx_valid_0                                  38331          1          -    Covered              
        bin tx_valid_1                                   7888          1          -    Covered              
    Cross cross_din_rx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_all_values_rx_valid_1                5012          1          -    Covered              
    Cross cross_din_tx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_read_data_tx_valid_1                 5110          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /Ram_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_coverage.sv
    1                                                package Ram_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                    import Ram_shared_pkg::*;
    6                                                
    7                                                    class Ram_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(Ram_coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(Ram_seq_item) cov_export;
    10                                                       uvm_tlm_analysis_fifo #(Ram_seq_item) cov_fifo;
    11                                                       Ram_seq_item cov_item;
    12                                               
    13                                                       // Functional Coverage
    14                                                       covergroup cg_Ram;
    15                                                           cp_din: coverpoint cov_item.din[9:8] {
    16                                                               bins all_values[]       = {[0:3]};
    17                                                               bins read_data          = {READ_DATA};
    18                                                               bins wr_addr_2_wr_data  = (WRITE_ADDR => WRITE_DATA);
    19                                                               bins rd_addr_2_rd_addr  = (READ_ADDR => READ_DATA);
    20                                                           }
    21                                                           cp_rx_valid: coverpoint cov_item.rx_valid {
    22                                                               bins rx_valid_0 = {0};
    23                                                               bins rx_valid_1 = {1};
    24                                                           }
    25                                                           cp_tx_valid: coverpoint cov_item.tx_valid {
    26                                                               bins tx_valid_0 = {0};
    27                                                               bins tx_valid_1 = {1};
    28                                                           }
    29                                                           cross_din_rx_valid: cross cp_din, cp_rx_valid {
    30                                                               option.cross_auto_bin_max = 0;
    31                                                               bins din_all_values_rx_valid_1 = binsof (cp_din.all_values) && binsof (cp_rx_valid.rx_valid_1);
    32                                                           }
    33                                               
    34                                                           cross_din_tx_valid: cross cp_din, cp_tx_valid {
    35                                                               option.cross_auto_bin_max = 0;
    36                                                               bins din_read_data_tx_valid_1 = binsof (cp_din.read_data) && binsof (cp_tx_valid.tx_valid_1);
    37                                                           }
    38                                                           
    39                                                       endgroup : cg_Ram
    40                                               
    41                                                       function new(string name = "Ram_coverage", uvm_component parent = null);
    42              1                          1                 super.new(name, parent);
    43              1                          1                 cg_Ram = new();
    44                                                       endfunction
    45                                               
    46                                                       function void build_phase(uvm_phase phase);
    47              1                          1                 super.build_phase(phase);
    48              1                          1                 cov_export  = new("cov_export", this);
    49              1                          1                 cov_fifo    = new("cov_fifo", this);
    50                                                       endfunction : build_phase
    51                                               
    52                                                       function void connect_phase(uvm_phase phase);
    53              1                          1                 super.connect_phase(phase);
    54              1                          1                 cov_export.connect(cov_fifo.analysis_export);
    55                                                       endfunction : connect_phase
    56                                               
    57                                                       task run_phase(uvm_phase phase);
    58              1                          1                 super.run_phase(phase);
    59              1                          1                 forever begin
    60              1                      46220                     cov_fifo.get(cov_item);
    61              1                      46219                     cg_Ram.sample();


=================================================================================
=== Instance: /Ram_scoreboard_pkg
=== Design Unit: work.Ram_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13         3        10    23.07%

================================Branch Details================================

Branch Coverage for instance /Ram_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_scoreboard.sv
------------------------------------IF Branch------------------------------------
    32                                     46219     Count coming in to IF
    32              1                    ***0***                     if ((seq_item_sb.dout !== seq_item_sb.dout_ref) || (seq_item_sb.tx_valid !== seq_item_sb.tx_valid_ref))
    43              1                      46219                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                   ***0***     Count coming in to IF
    34              1                    ***0***                         if (seq_item_sb.dout !== seq_item_sb.dout_ref)
    37              1                    ***0***                         else if (seq_item_sb.tx_valid !== seq_item_sb.tx_valid_ref)
                                         ***0***     All False Count
Branch totals: 0 hits of 3 branches = 0.00%

------------------------------------IF Branch------------------------------------
    35                                   ***0***     Count coming in to IF
    35              1                    ***0***                             `uvm_error("run_phase", $sformatf("Dout Mismatch: dout=%0d, dout_ref=%0d, %s",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***                             `uvm_error("run_phase", $sformatf("Tx_valid Mismatch: tx_valid=%0b, tx_valid_ref=%0b, %s",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    44                                     46219     Count coming in to IF
    44              1                    ***0***                         `uvm_info("run_phase", $sformatf("Match: dout=%0d, tx_valid=%0b",
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    53                                         1     Count coming in to IF
    53              1                          1                 `uvm_info("report_phase", $sformatf("Total Correct: %0d, Total Errors: %0d", correct_count, error_count), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_scoreboard_pkg --

  File Ram_scoreboard.sv
----------------Focused Condition View-------------------
Line       32 Item    1  ((this.seq_item_sb.dout !== this.seq_item_sb.dout_ref) || (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref))
Condition totals: 0 of 2 input terms covered = 0.00%

                                                     Input Term   Covered  Reason for no coverage   Hint
                                                    -----------  --------  -----------------------  --------------
          (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)         N  '_1' not hit             Hit '_1'
  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                       Non-masking condition(s)      
 ---------  ---------  --------------------                                             -------------------------     
  Row   1:          1  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)_0          ~(this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)
  Row   2:    ***0***  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)_1          -                             
  Row   3:          1  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)_0  ~(this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)
  Row   4:    ***0***  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)_1  ~(this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)

----------------Focused Condition View-------------------
Line       34 Item    1  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                             Input Term   Covered  Reason for no coverage   Hint
                                            -----------  --------  -----------------------  --------------
  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                               Non-masking condition(s)      
 ---------  ---------  --------------------                                     -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)_1  -                             

----------------Focused Condition View-------------------
Line       37 Item    1  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                                     Input Term   Covered  Reason for no coverage   Hint
                                                    -----------  --------  -----------------------  --------------
  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                       Non-masking condition(s)      
 ---------  ---------  --------------------                                             -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        14         6    70.00%

================================Statement Details================================

Statement Coverage for instance /Ram_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_scoreboard.sv
    1                                                package Ram_scoreboard_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                
    6                                                    class Ram_scoreboard extends uvm_scoreboard;
    7               1                    ***0***             `uvm_component_utils(Ram_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(Ram_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(Ram_seq_item) sb_fifo;
    10                                                       Ram_seq_item seq_item_sb;
    11                                               
    12              1                          1             int error_count =0; int correct_count=0;
    12              2                          1     
    13                                               
    14                                                       function new(string name = "Ram_scoreboard", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 sb_export   = new("sb_export", this);
    21              1                          1                 sb_fifo     = new("sb_fifo", this);
    22                                                       endfunction
    23                                               
    24                                                       function void connect_phase(uvm_phase phase);
    25              1                          1                 super.connect_phase(phase);
    26              1                          1                 sb_export.connect(sb_fifo.analysis_export);
    27                                                       endfunction
    28                                               
    29                                                       task run_phase(uvm_phase phase);
    30              1                          1                 forever begin
    31              1                      46220                     sb_fifo.get(seq_item_sb);
    32                                                               if ((seq_item_sb.dout !== seq_item_sb.dout_ref) || (seq_item_sb.tx_valid !== seq_item_sb.tx_valid_ref))
    33                                                               begin
    34                                                                   if (seq_item_sb.dout !== seq_item_sb.dout_ref)
    35              1                    ***0***                             `uvm_error("run_phase", $sformatf("Dout Mismatch: dout=%0d, dout_ref=%0d, %s",
    36                                                                           seq_item_sb.dout, seq_item_sb.dout_ref, seq_item_sb.convert2string_stimulus()))
    37                                                                   else if (seq_item_sb.tx_valid !== seq_item_sb.tx_valid_ref)
    38              1                    ***0***                             `uvm_error("run_phase", $sformatf("Tx_valid Mismatch: tx_valid=%0b, tx_valid_ref=%0b, %s",
    39                                                                           seq_item_sb.tx_valid, seq_item_sb.tx_valid_ref, seq_item_sb.convert2string_stimulus()))
    40                                               
    41              1                    ***0***                         error_count++;
    42                                                               end
    43                                                               else begin
    44              1                    ***0***                         `uvm_info("run_phase", $sformatf("Match: dout=%0d, tx_valid=%0b",
    45                                                                       seq_item_sb.dout, seq_item_sb.tx_valid), UVM_HIGH)
    46              1                      46219                         correct_count++;
    47                                                               end
    48                                                           end
    49                                                       endtask
    50                                               
    51                                                       function void report_phase(uvm_phase phase);
    52              1                          1                 super.report_phase(phase);
    53              1                          1                 `uvm_info("report_phase", $sformatf("Total Correct: %0d, Total Errors: %0d", correct_count, error_count), UVM_MEDIUM)


=================================================================================
=== Instance: /Ram_config_pkg
=== Design Unit: work.Ram_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /Ram_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_cfg.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(Ram_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(Ram_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(Ram_cfg)
    6               4                    ***0***             `uvm_object_utils(Ram_cfg)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(Ram_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(Ram_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_config_pkg --

  File Ram_cfg.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /Ram_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_cfg.sv
    1                                                package Ram_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh" 
    4                                                
    5                                                    class Ram_cfg extends uvm_object;
    6               1                    ***0***             `uvm_object_utils(Ram_cfg)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual Ram_if Ram_vif;
    8                                                        uvm_active_passive_enum is_active; // UVM_ACTIVE or UVM_PASSIVE
    9                                                
    10                                                       function new(string name = "Ram_cfg");
    11              1                          1                 super.new(name);


=================================================================================
=== Instance: /Ram_sequencer_pkg
=== Design Unit: work.Ram_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /Ram_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_sequencer.sv
    1                                                package Ram_sequencer_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                
    6                                                    class Ram_sequencer extends uvm_sequencer #(Ram_seq_item);
    7               1                    ***0***             `uvm_component_utils(Ram_sequencer)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                        function new(string name, uvm_component parent);
    10              1                    ***0***                 super.new(name, parent);


=================================================================================
=== Instance: /Ram_monitor_pkg
=== Design Unit: work.Ram_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /Ram_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_monitor.sv
------------------------------------IF Branch------------------------------------
    37                                     46219     Count coming in to IF
    37              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        16         3    84.21%

================================Statement Details================================

Statement Coverage for instance /Ram_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_monitor.sv
    1                                                package Ram_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                
    6                                                    class Ram_monitor extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(Ram_monitor)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        virtual Ram_if monitor_vif;
    10                                                       Ram_seq_item rsp_seq_item;
    11                                                       uvm_analysis_port #(Ram_seq_item) monitor_ap;
    12                                               
    13                                                       function new(string name = "Ram_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction : new
    16                                               
    17                                                       function void build_phase(uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 monitor_ap = new("monitor_ap", this);
    20                                                       endfunction : build_phase
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                      46220                     rsp_seq_item = Ram_seq_item::type_id::create("rsp_seq_item");
    26                                               
    27              1                      46220                     @(negedge monitor_vif.clk);
    28              1                      46219                     rsp_seq_item.rst_n        = monitor_vif.rst_n;
    29              1                      46219                     rsp_seq_item.rx_valid     = monitor_vif.rx_valid;
    30              1                      46219                     rsp_seq_item.din          = monitor_vif.din;
    31              1                      46219                     rsp_seq_item.tx_valid     = monitor_vif.tx_valid;
    32              1                      46219                     rsp_seq_item.tx_valid_ref = monitor_vif.tx_valid_ref;
    33              1                      46219                     rsp_seq_item.dout         = monitor_vif.dout;
    34              1                      46219                     rsp_seq_item.dout_ref     = monitor_vif.dout_ref;
    35                                               
    36              1                      46219                     monitor_ap.write(rsp_seq_item);
    37              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /Ram_driver_pkg
=== Design Unit: work.Ram_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /Ram_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_driver.sv
------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         0        14     0.00%

================================Statement Details================================

Statement Coverage for instance /Ram_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_driver.sv
    1                                                package Ram_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                
    6                                                    class Ram_driver extends uvm_driver #(Ram_seq_item);
    7               1                    ***0***             `uvm_component_utils(Ram_driver)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                        virtual Ram_if driver_vif;
    10                                                       Ram_seq_item stim_seq_item;
    11                                               
    12                                                       function new(string name = "Ram_driver", uvm_component parent = null);
    13              1                    ***0***                 super.new(name, parent);
    14                                                       endfunction : new
    15                                               
    16                                                       task run_phase(uvm_phase phase);
    17              1                    ***0***                 super.run_phase(phase);
    18              1                    ***0***                 forever begin
    19              1                    ***0***                     stim_seq_item = Ram_seq_item::type_id::create("stim_seq_item");
    20              1                    ***0***                     seq_item_port.get_next_item(stim_seq_item);
    21                                               
    22              1                    ***0***                     driver_vif.rst_n    = stim_seq_item.rst_n;
    23              1                    ***0***                     driver_vif.rx_valid = stim_seq_item.rx_valid;
    24              1                    ***0***                     driver_vif.din      = stim_seq_item.din;
    25              1                    ***0***                     @(negedge driver_vif.clk);
    26                                               
    27              1                    ***0***                     seq_item_port.item_done();
    28              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /Ram_agent_pkg
=== Design Unit: work.Ram_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /Ram_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_agent.sv
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***                 if (!uvm_config_db#(Ram_cfg)::get(this, "", "ram_CFG", Ram_config)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***                     `uvm_fatal("NOVIF", "Cannot get cfg from uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              1                    ***0***                 if (Ram_config.is_active == UVM_ACTIVE) begin // only build driver and sequencer if agent is active
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              1                    ***0***                 if (Ram_config.is_active == UVM_ACTIVE) begin // only connect driver and sequencer if agent is active
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         8         7    53.33%

================================Statement Details================================

Statement Coverage for instance /Ram_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_agent.sv
    1                                                package Ram_agent_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_driver_pkg::*;
    5                                                    import Ram_monitor_pkg::*;
    6                                                    import Ram_sequencer_pkg::*;
    7                                                    import Ram_config_pkg::*;
    8                                                    import Ram_seq_item_pkg::*;
    9                                                
    10                                                   class Ram_agent extends uvm_agent;
    11              1                    ***0***             `uvm_component_utils(Ram_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                                       Ram_driver driver;
    13                                                       Ram_monitor monitor;
    14                                                       Ram_sequencer sequencer;
    15                                                       Ram_cfg Ram_config;
    16                                                       uvm_analysis_port #(Ram_seq_item) agent_ap;
    17                                               
    18                                                       function new(string name = "Ram_agent", uvm_component parent = null);
    19              1                          1                 super.new(name, parent);
    20                                                       endfunction : new
    21                                               
    22                                                       function void build_phase(uvm_phase phase);
    23              1                          1                 super.build_phase(phase);
    24                                               
    25                                                           if (!uvm_config_db#(Ram_cfg)::get(this, "", "ram_CFG", Ram_config)) begin
    26              1                    ***0***                     `uvm_fatal("NOVIF", "Cannot get cfg from uvm_config_db")
    27                                                           end
    28                                                           if (Ram_config.is_active == UVM_ACTIVE) begin // only build driver and sequencer if agent is active
    29              1                    ***0***                     driver      = Ram_driver::type_id::create("driver", this);
    30              1                    ***0***                     sequencer   = Ram_sequencer::type_id::create("sequencer", this);
    31                                                           end
    32                                                           
    33              1                          1                 monitor = Ram_monitor::type_id::create("monitor", this);
    34              1                          1                 agent_ap = new("agent_ap", this);
    35                                                       endfunction : build_phase
    36                                               
    37                                                       function void connect_phase(uvm_phase phase);
    38              1                          1                 super.connect_phase(phase);
    39                                                           if (Ram_config.is_active == UVM_ACTIVE) begin // only connect driver and sequencer if agent is active
    40              1                    ***0***                     driver.seq_item_port.connect(sequencer.seq_item_export);
    41              1                    ***0***                     driver.driver_vif = Ram_config.Ram_vif;
    42                                                           end
    43              1                          1                 monitor.monitor_ap.connect(agent_ap);
    44              1                          1                 monitor.monitor_vif = Ram_config.Ram_vif;


=================================================================================
=== Instance: /Ram_env_pkg
=== Design Unit: work.Ram_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /Ram_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_env.sv
    1                                                package Ram_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_agent_pkg::*;
    5                                                    import Ram_scoreboard_pkg::*;
    6                                                    import Ram_coverage_pkg::*;
    7                                                
    8                                                    class Ram_env extends uvm_env;
    9               1                    ***0***             `uvm_component_utils(Ram_env)
    9               2                    ***0***     
    9               3                          2     
    10                                               
    11                                                       Ram_agent agent;
    12                                                       Ram_scoreboard scoreboard;
    13                                                       Ram_coverage coverage;
    14                                               
    15                                                       function new(string name = "Ram_env", uvm_component parent = null);
    16              1                          1                 super.new(name, parent);
    17                                                       endfunction : new
    18                                               
    19                                                       virtual function void build_phase(uvm_phase phase);
    20              1                          1                 super.build_phase(phase);
    21                                               
    22              1                          1                 agent       = Ram_agent::type_id::create("agent", this);
    23              1                          1                 scoreboard  = Ram_scoreboard::type_id::create("scoreboard", this);
    24              1                          1                 coverage    = Ram_coverage::type_id::create("coverage", this);
    25                                                       endfunction : build_phase
    26                                               
    27                                                       virtual function void connect_phase(uvm_phase phase);
    28              1                          1                 super.connect_phase(phase);
    29              1                          1                 agent.agent_ap.connect(scoreboard.sb_export);
    30              1                          1                 agent.agent_ap.connect(coverage.cov_export);


=================================================================================
=== Instance: /SPI_slave_seq_item_pkg
=== Design Unit: work.SPI_slave_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13         0        13     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(SPI_slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(SPI_slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(SPI_slave_seq_item)
    7               4                    ***0***             `uvm_object_utils(SPI_slave_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(SPI_slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(SPI_slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    47                                   ***0***     Count coming in to IF
    47              1                    ***0***             if (rst_n == 0) counter = 0;
    48              1                    ***0***             else if (SS_n == 1) counter = 1;
    49              1                    ***0***             else counter++;
Branch totals: 0 hits of 3 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_slave_seq_item_pkg --

  File SPI_slave_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         2        15    11.76%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_seq_item.sv
    1                                                package SPI_slave_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_slave_shared_pkg::*;
    5                                                
    6                                                    class SPI_slave_seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(SPI_slave_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                
    9                                                        rand bit            rst_n, SS_n, tx_valid;
    10                                                       rand bit            MOSI;
    11                                                       rand bit [7:0]      tx_data;
    12                                                       bit [9:0]           rx_data, rx_data_ref;
    13                                                       bit                 rx_valid,rx_valid_ref, MISO, MISO_ref;
    14              1                      46220             int                 counter = 0;
    15                                                       SPI_slave_state_e   cs;
    16                                                       rand bit [10:0]     array_for_MOSI;
    17                                               
    18                                                       function new(string name = "SPI_slave_seq_item");
    19              1                      46220                 super.new(name);
    20                                                       endfunction : new
    21                                               
    22                                                       function string convert2string();
    23              1                    ***0***                 return $sformatf("%s rst_n=%b, SS_n=%b, MOSI=%b, tx_valid=%b, tx_data=0x%0b, MISO=%b, rx_valid=%b, rx_data=0x%0h",
    24                                                                            super.convert2string(), rst_n, SS_n, MOSI, tx_valid, tx_data, MISO, rx_valid, rx_data);
    25                                                       endfunction : convert2string
    26                                               
    27                                                       function string convert2string_stimulus();
    28              1                    ***0***                 return $sformatf("rst_n=%b, SS_n=%b, MOSI=%b, tx_valid=%b, tx_data=0x%0b",
    29                                                                            rst_n, SS_n, MOSI, tx_valid, tx_data);
    30                                                       endfunction : convert2string_stimulus
    31                                               
    32                                                       constraint c_rst_n { rst_n dist {0 := 1, 1 := 40}; }
    33                                               
    34                                                       constraint c_SS_n { 
    35                                                           if (cs == SPI_slave_state_e'(READ_DATA)) SS_n == (counter % 24 == 0);
    36                                                           else SS_n == (counter % 14 == 0); 
    37                                                           }
    38                                                       constraint c_tx_valid { 
    39                                                           if (cs == SPI_slave_state_e'(READ_DATA) && counter >= 14) tx_valid == 1; 
    40                                                           else tx_valid == 0; 
    41                                                           }
    42                                                       constraint c_array_for_MOSI { 
    43                                                           array_for_MOSI[10:8] inside {3'b000, 3'b001, 3'b110, 3'b111}; 
    44                                                           }
    45                                               
    46                                                       function void post_randomize();
    47              1                    ***0***             if (rst_n == 0) counter = 0;
    48              1                    ***0***             else if (SS_n == 1) counter = 1;
    49              1                    ***0***             else counter++;


=================================================================================
=== Instance: /SPI_slave_coverage_pkg
=== Design Unit: work.SPI_slave_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          4        na        na        na
            Covergroup Bins         28        28         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_slave_coverage_pkg/SPI_slave_coverage/cg_SPI_slave 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    28         28          -                      
    missing/total bins:                                     0         28          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_rxdata                              100.00%        100          -    Covered              
        covered/total bins:                                17         17          -                      
        missing/total bins:                                 0         17          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_SS_n                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_MOSI                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_MOSI_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_slave_coverage_pkg::SPI_slave_coverage::cg_SPI_slave  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    28         28          -                      
    missing/total bins:                                     0         28          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_rxdata                              100.00%        100          -    Covered              
        covered/total bins:                                17         17          -                      
        missing/total bins:                                 0         17          -                      
        % Hit:                                        100.00%        100          -                      
        ignore_bin rx_data_bins_ignored[0=>3]               0                     -    ZERO                 
        ignore_bin rx_data_bins_ignored[2=>1]               0                     -    ZERO                 
        ignore_bin rx_data_bins_ignored[1=>2]               0                     -    ZERO                 
        bin all_values[0]                               17122          1          -    Covered              
        bin all_values[1]                                9231          1          -    Covered              
        bin all_values[2]                                9762          1          -    Covered              
        bin all_values[3]                               10104          1          -    Covered              
        bin all_transitions[0=>0]                       16131          1          -    Covered              
        bin all_transitions[0=>1]                         540          1          -    Covered              
        bin all_transitions[0=>2]                         451          1          -    Covered              
        bin all_transitions[1=>0]                         517          1          -    Covered              
        bin all_transitions[1=>1]                        8639          1          -    Covered              
        bin all_transitions[1=>3]                          75          1          -    Covered              
        bin all_transitions[2=>0]                         231          1          -    Covered              
        bin all_transitions[2=>2]                        8985          1          -    Covered              
        bin all_transitions[2=>3]                         546          1          -    Covered              
        bin all_transitions[3=>0]                         242          1          -    Covered              
        bin all_transitions[3=>1]                          52          1          -    Covered              
        bin all_transitions[3=>2]                         326          1          -    Covered              
        bin all_transitions[3=>3]                        9483          1          -    Covered              
    Coverpoint cp_SS_n                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin SS_n_OTHER                                   2138          1          -    Covered              
        bin SS_n_READ_DATA                                350          1          -    Covered              
        bin SS_n_one2zero                                3431          1          -    Covered              
    Coverpoint cp_MOSI                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_address                                8011          1          -    Covered              
        bin write_data                                   5678          1          -    Covered              
        bin read_address                                 5351          1          -    Covered              
        bin read_data                                    7128          1          -    Covered              
    Cross cross_MOSI_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin Read_data_SS_n_one2zero                   535          1          -    Covered              
            bin Write_data_SS_n_one2zero                  835          1          -    Covered              
            bin Read_address_SS_n_one2zero                503          1          -    Covered              
            bin Write_address_SS_n_one2zero               860          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_coverage.sv
    1                                                package SPI_slave_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_slave_seq_item_pkg::*;
    5                                                    import SPI_slave_shared_pkg::*;
    6                                                
    7                                                    class SPI_slave_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(SPI_slave_coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(SPI_slave_seq_item) cov_export;
    10                                                       uvm_tlm_analysis_fifo #(SPI_slave_seq_item) cov_fifo;
    11                                                       SPI_slave_seq_item cov_item;
    12                                               
    13                                                       // Functional Coverage
    14                                                       covergroup cg_SPI_slave;
    15                                                           cp_rxdata: coverpoint cov_item.rx_data[9:8] {
    16                                                               bins all_values[] = {[0:3]};
    17                                                               bins all_transitions[] = (0 => 0), (0 => 1), (0 => 2), (0 => 3),
    18                                                                                     (1 => 0), (1 => 1), (1 => 2), (1 => 3),
    19                                                                                     (2 => 0), (2 => 1), (2 => 2), (2 => 3),
    20                                                                                     (3 => 0), (3 => 1), (3 => 2), (3 => 3);
    21                                                               ignore_bins rx_data_bins_ignored[] = (0 => 3),(2 => 1),(1 => 2);// Ignore invalid transactions as they require multiple bit toggles at same cycle
    22                                                           }
    23                                                           
    24                                                           cp_SS_n: coverpoint cov_item.SS_n {
    25                                                               bins SS_n_OTHER = (1=> 0[*13] => 1);
    26                                                               bins SS_n_READ_DATA = (1=> 0[*23] => 1);
    27                                                               bins SS_n_one2zero = (1 => 0);
    28                                                           }
    29                                                           cp_MOSI: coverpoint cov_item.MOSI {
    30                                                               bins write_address = (0=>0=>0);
    31                                                               bins write_data = (0=>0=>1);
    32                                                               bins read_address = (1=>1=>0);
    33                                                               bins read_data = (1=>1=>1);
    34                                                           }
    35                                                           cross_MOSI_SS_n: cross cp_MOSI, cp_SS_n {
    36                                                               option.cross_auto_bin_max = 0;
    37                                                               bins Read_data_SS_n_one2zero = binsof(cp_MOSI.read_data) && binsof(cp_SS_n.SS_n_one2zero);
    38                                                               bins Write_data_SS_n_one2zero = binsof(cp_MOSI.write_data) && binsof(cp_SS_n.SS_n_one2zero);
    39                                                               bins Read_address_SS_n_one2zero = binsof(cp_MOSI.read_address) && binsof(cp_SS_n.SS_n_one2zero);
    40                                                               bins Write_address_SS_n_one2zero = binsof(cp_MOSI.write_address) && binsof(cp_SS_n.SS_n_one2zero);
    41                                                           }
    42                                                       endgroup : cg_SPI_slave
    43                                               
    44                                                       function new(string name = "SPI_slave_coverage", uvm_component parent = null);
    45              1                          1                 super.new(name, parent);
    46              1                          1                 cg_SPI_slave = new();
    47                                                       endfunction
    48                                               
    49                                                       function void build_phase(uvm_phase phase);
    50              1                          1                 super.build_phase(phase);
    51              1                          1                 cov_export = new("cov_export", this);
    52              1                          1                 cov_fifo = new("cov_fifo", this);
    53                                                       endfunction : build_phase
    54                                               
    55                                                       function void connect_phase(uvm_phase phase);
    56              1                          1                 super.connect_phase(phase);
    57              1                          1                 cov_export.connect(cov_fifo.analysis_export);
    58                                                       endfunction : connect_phase
    59                                               
    60                                                       task run_phase(uvm_phase phase);
    61              1                          1                 super.run_phase(phase);
    62              1                          1                 forever begin
    63              1                      46220                     cov_fifo.get(cov_item);
    64              1                      46219                     cg_SPI_slave.sample();


=================================================================================
=== Instance: /SPI_slave_scoreboard_pkg
=== Design Unit: work.SPI_slave_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        16         3        13    18.75%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_scoreboard.sv
------------------------------------IF Branch------------------------------------
    32                                     46219     Count coming in to IF
    32              1                    ***0***                     if (seq_item_sb.rx_data !== seq_item_sb.rx_data_ref || seq_item_sb.MISO !== seq_item_sb.MISO_ref || seq_item_sb.rx_valid !== seq_item_sb.rx_valid_ref) 
    45              1                      46219                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                   ***0***     Count coming in to IF
    34              1                    ***0***                         if (seq_item_sb.rx_data !== seq_item_sb.rx_data_ref)
    37              1                    ***0***                         else if (seq_item_sb.MISO !== seq_item_sb.MISO_ref)
    40              1                    ***0***                         else if (seq_item_sb.rx_valid !== seq_item_sb.rx_valid_ref)
                                         ***0***     All False Count
Branch totals: 0 hits of 4 branches = 0.00%

------------------------------------IF Branch------------------------------------
    35                                   ***0***     Count coming in to IF
    35              1                    ***0***                             `uvm_error("run_phase", $sformatf("Mismatch in rx_data: expected=%0d, actual=%0d, %s",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***                             `uvm_error("run_phase", $sformatf("Mismatch in MISO: expected=%0b, actual=%0b, %s",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***                             `uvm_error("run_phase", $sformatf("Mismatch in rx_valid: expected=%0b, actual=%0b, %s",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                     46219     Count coming in to IF
    46              1                    ***0***                         `uvm_info("run_phase", $sformatf("Match: rx_data=%0d, MISO=%0b, rx_valid=%0b",
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    55                                         1     Count coming in to IF
    55              1                          1                 `uvm_info("report_phase", $sformatf("Total Correct: %0d, Total Errors: %0d", correct_count, error_count), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         0         6     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_slave_scoreboard_pkg --

  File SPI_slave_scoreboard.sv
----------------Focused Condition View-------------------
Line       32 Item    1  ((this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref) || (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref) || (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref))
Condition totals: 0 of 3 input terms covered = 0.00%

                                                     Input Term   Covered  Reason for no coverage   Hint
                                                    -----------  --------  -----------------------  --------------
    (this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref)         N  '_1' not hit             Hit '_1'
          (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)         N  '_1' not hit             Hit '_1'
  (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                       Non-masking condition(s)      
 ---------  ---------  --------------------                                             -------------------------     
  Row   1:          1  (this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref)_0    ~((this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref) || (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref))
  Row   2:    ***0***  (this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref)_1    -                             
  Row   3:          1  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)_0          (~(this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref) && ~(this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref))
  Row   4:    ***0***  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)_1          ~(this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref)
  Row   5:          1  (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref)_0  (~(this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref) && ~(this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref))
  Row   6:    ***0***  (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref)_1  (~(this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref) && ~(this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref))

----------------Focused Condition View-------------------
Line       34 Item    1  (this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                                   Input Term   Covered  Reason for no coverage   Hint
                                                  -----------  --------  -----------------------  --------------
  (this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                     Non-masking condition(s)      
 ---------  ---------  --------------------                                           -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.rx_data !== this.seq_item_sb.rx_data_ref)_1  -                             

----------------Focused Condition View-------------------
Line       37 Item    1  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                             Input Term   Covered  Reason for no coverage   Hint
                                            -----------  --------  -----------------------  --------------
  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                               Non-masking condition(s)      
 ---------  ---------  --------------------                                     -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)_1  -                             

----------------Focused Condition View-------------------
Line       40 Item    1  (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                                     Input Term   Covered  Reason for no coverage   Hint
                                                    -----------  --------  -----------------------  --------------
  (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                       Non-masking condition(s)      
 ---------  ---------  --------------------                                             -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.rx_valid !== this.seq_item_sb.rx_valid_ref)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        14         7    66.66%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_scoreboard.sv
    1                                                package SPI_slave_scoreboard_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_slave_seq_item_pkg::*;
    5                                                
    6                                                    class SPI_slave_scoreboard extends uvm_scoreboard;
    7               1                    ***0***             `uvm_component_utils(SPI_slave_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(SPI_slave_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(SPI_slave_seq_item) sb_fifo;
    10                                                       SPI_slave_seq_item seq_item_sb;
    11                                               
    12              1                          1             int error_count =0; int correct_count=0;
    12              2                          1     
    13                                               
    14                                                       function new(string name = "SPI_slave_scoreboard", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 sb_export = new("sb_export", this);
    21              1                          1                 sb_fifo = new("sb_fifo", this);
    22                                                       endfunction
    23                                               
    24                                                       function void connect_phase(uvm_phase phase);
    25              1                          1                 super.connect_phase(phase);
    26              1                          1                 sb_export.connect(sb_fifo.analysis_export);
    27                                                       endfunction
    28                                               
    29                                                       task run_phase(uvm_phase phase);
    30              1                          1                 forever begin
    31              1                      46220                     sb_fifo.get(seq_item_sb);
    32                                                               if (seq_item_sb.rx_data !== seq_item_sb.rx_data_ref || seq_item_sb.MISO !== seq_item_sb.MISO_ref || seq_item_sb.rx_valid !== seq_item_sb.rx_valid_ref) 
    33                                                               begin
    34                                                                   if (seq_item_sb.rx_data !== seq_item_sb.rx_data_ref)
    35              1                    ***0***                             `uvm_error("run_phase", $sformatf("Mismatch in rx_data: expected=%0d, actual=%0d, %s",
    36                                                                                   seq_item_sb.rx_data_ref, seq_item_sb.rx_data, seq_item_sb.convert2string_stimulus()))
    37                                                                   else if (seq_item_sb.MISO !== seq_item_sb.MISO_ref)
    38              1                    ***0***                             `uvm_error("run_phase", $sformatf("Mismatch in MISO: expected=%0b, actual=%0b, %s",
    39                                                                                   seq_item_sb.MISO_ref, seq_item_sb.MISO, seq_item_sb.convert2string_stimulus()))
    40                                                                   else if (seq_item_sb.rx_valid !== seq_item_sb.rx_valid_ref)
    41              1                    ***0***                             `uvm_error("run_phase", $sformatf("Mismatch in rx_valid: expected=%0b, actual=%0b, %s",
    42                                                                                   seq_item_sb.rx_valid_ref, seq_item_sb.rx_valid, seq_item_sb.convert2string_stimulus()))
    43              1                    ***0***                         error_count++;
    44                                                               end
    45                                                               else begin
    46              1                    ***0***                         `uvm_info("run_phase", $sformatf("Match: rx_data=%0d, MISO=%0b, rx_valid=%0b",
    47                                                                   seq_item_sb.rx_data, seq_item_sb.MISO, seq_item_sb.rx_valid), UVM_HIGH)
    48              1                      46219                         correct_count++;
    49                                                               end
    50                                                           end
    51                                                       endtask
    52                                               
    53                                                       function void report_phase(uvm_phase phase);
    54              1                          1                 super.report_phase(phase);
    55              1                          1                 `uvm_info("report_phase", $sformatf("Total Correct: %0d, Total Errors: %0d", correct_count, error_count), UVM_MEDIUM)


=================================================================================
=== Instance: /SPI_slave_config_pkg
=== Design Unit: work.SPI_slave_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_cfg.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(SPI_slave_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(SPI_slave_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(SPI_slave_cfg)
    6               4                    ***0***             `uvm_object_utils(SPI_slave_cfg)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(SPI_slave_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(SPI_slave_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_slave_config_pkg --

  File SPI_slave_cfg.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_cfg.sv
    1                                                package SPI_slave_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh" 
    4                                                
    5                                                    class SPI_slave_cfg extends uvm_object;
    6               1                    ***0***             `uvm_object_utils(SPI_slave_cfg)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual SPI_slave_if Slave_vif;
    8                                                        uvm_active_passive_enum is_active;
    9                                                
    10                                                       function new(string name = "SPI_slave_cfg");
    11              1                          1                 super.new(name);


=================================================================================
=== Instance: /SPI_slave_sequencer_pkg
=== Design Unit: work.SPI_slave_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_sequencer.sv
    1                                                package SPI_slave_sequencer_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_slave_seq_item_pkg::*;
    5                                                    import SPI_slave_config_pkg::*;
    6                                                
    7                                                    class SPI_slave_sequencer extends uvm_sequencer #(SPI_slave_seq_item);
    8               1                    ***0***             `uvm_component_utils(SPI_slave_sequencer)
    8               2                    ***0***     
    8               3                    ***0***     
    9                                                        SPI_slave_cfg cfg;
    10                                                       virtual SPI_slave_if sequencer_vif;
    11                                               
    12                                                       function new(string name, uvm_component parent);
    13              1                    ***0***                 super.new(name, parent);


=================================================================================
=== Instance: /SPI_slave_monitor_pkg
=== Design Unit: work.SPI_slave_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_monitor.sv
------------------------------------IF Branch------------------------------------
    42                                     46219     Count coming in to IF
    42              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        21         3    87.50%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_monitor.sv
    1                                                package SPI_slave_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_slave_seq_item_pkg::*;
    5                                                
    6                                                    class SPI_slave_monitor extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(SPI_slave_monitor)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        virtual SPI_slave_if monitor_vif;
    10                                                       SPI_slave_seq_item rsp_seq_item;
    11                                                       uvm_analysis_port #(SPI_slave_seq_item) monitor_ap;
    12                                               
    13                                                       function new(string name = "SPI_slave_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction : new
    16                                               
    17                                                       function void build_phase(uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 monitor_ap = new("monitor_ap", this);
    20                                                       endfunction : build_phase
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                      46220                     rsp_seq_item = SPI_slave_seq_item::type_id::create("rsp_seq_item");
    26                                               
    27              1                      46220                     @(negedge monitor_vif.clk);
    28              1                      46219                     rsp_seq_item.SS_n          = monitor_vif.SS_n;
    29              1                      46219                     rsp_seq_item.rst_n         = monitor_vif.rst_n;
    30              1                      46219                     rsp_seq_item.MOSI          = monitor_vif.MOSI;
    31              1                      46219                     rsp_seq_item.tx_data       = monitor_vif.tx_data;
    32              1                      46219                     rsp_seq_item.tx_valid      = monitor_vif.tx_valid;
    33              1                      46219                     rsp_seq_item.rx_data       = monitor_vif.rx_data;
    34              1                      46219                     rsp_seq_item.rx_data_ref   = monitor_vif.rx_data_ref;
    35              1                      46219                     rsp_seq_item.MISO          = monitor_vif.MISO;
    36              1                      46219                     rsp_seq_item.MISO_ref      = monitor_vif.MISO_ref;
    37              1                      46219                     rsp_seq_item.rx_valid      = monitor_vif.rx_valid;
    38              1                      46219                     rsp_seq_item.rx_valid_ref  = monitor_vif.rx_valid_ref;
    39              1                      46219                     rsp_seq_item.cs            = monitor_vif.cs;
    40                                               
    41              1                      46219                     monitor_ap.write(rsp_seq_item);
    42              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /SPI_slave_driver_pkg
=== Design Unit: work.SPI_slave_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_driver.sv
------------------------------------IF Branch------------------------------------
    31                                   ***0***     Count coming in to IF
    31              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         0        17     0.00%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_driver.sv
    1                                                package SPI_slave_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_slave_seq_item_pkg::*;
    5                                                
    6                                                    class SPI_slave_driver extends uvm_driver #(SPI_slave_seq_item);
    7               1                    ***0***             `uvm_component_utils(SPI_slave_driver)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                        virtual SPI_slave_if driver_vif;
    10                                                       SPI_slave_seq_item stim_seq_item;
    11                                               
    12                                                       function new(string name = "SPI_slave_driver", uvm_component parent = null);
    13              1                    ***0***                 super.new(name, parent);
    14                                                       endfunction : new
    15                                               
    16                                                       task run_phase(uvm_phase phase);
    17              1                    ***0***                 super.run_phase(phase);
    18              1                    ***0***                 forever begin
    19              1                    ***0***                     stim_seq_item = SPI_slave_seq_item::type_id::create("stim_seq_item");
    20              1                    ***0***                     seq_item_port.get_next_item(stim_seq_item);
    21                                               
    22              1                    ***0***                     driver_vif.SS_n        = stim_seq_item.SS_n;
    23              1                    ***0***                     driver_vif.rst_n       = stim_seq_item.rst_n;
    24              1                    ***0***                     driver_vif.MOSI        = stim_seq_item.MOSI;
    25              1                    ***0***                     driver_vif.tx_data     = stim_seq_item.tx_data;
    26              1                    ***0***                     driver_vif.tx_valid    = stim_seq_item.tx_valid;
    27              1                    ***0***                     driver_vif.array_for_MOSI = stim_seq_item.array_for_MOSI;
    28              1                    ***0***                     @(negedge driver_vif.clk);
    29                                               
    30              1                    ***0***                     seq_item_port.item_done();
    31              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /SPI_slave_agent_pkg
=== Design Unit: work.SPI_slave_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_agent.sv
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***                 if (!uvm_config_db#(SPI_slave_cfg)::get(this, "", "slave_CFG", SPI_slave_config)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***                     `uvm_fatal("NOVIF", "Cannot get cfg from uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              1                    ***0***                 if (SPI_slave_config.is_active == UVM_ACTIVE) begin // only build driver and sequencer if agent is active
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              1                    ***0***                 if (SPI_slave_config.is_active == UVM_ACTIVE) begin // only connect driver and sequencer if agent is active
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16         8         8    50.00%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_agent.sv
    1                                                package SPI_slave_agent_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_slave_driver_pkg::*;
    5                                                    import SPI_slave_monitor_pkg::*;
    6                                                    import SPI_slave_sequencer_pkg::*;
    7                                                    import SPI_slave_config_pkg::*;
    8                                                    import SPI_slave_seq_item_pkg::*;
    9                                                
    10                                                   class SPI_slave_agent extends uvm_agent;
    11              1                    ***0***             `uvm_component_utils(SPI_slave_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                                       SPI_slave_driver driver;
    13                                                       SPI_slave_monitor monitor;
    14                                                       SPI_slave_sequencer sequencer;
    15                                                       SPI_slave_cfg SPI_slave_config;
    16                                                       uvm_analysis_port #(SPI_slave_seq_item) agent_ap;
    17                                               
    18                                                       function new(string name = "SPI_slave_agent", uvm_component parent = null);
    19              1                          1                 super.new(name, parent);
    20                                                       endfunction : new
    21                                               
    22                                                       function void build_phase(uvm_phase phase);
    23              1                          1                 super.build_phase(phase);
    24                                               
    25                                                           if (!uvm_config_db#(SPI_slave_cfg)::get(this, "", "slave_CFG", SPI_slave_config)) begin
    26              1                    ***0***                     `uvm_fatal("NOVIF", "Cannot get cfg from uvm_config_db")
    27                                                           end
    28                                                           if (SPI_slave_config.is_active == UVM_ACTIVE) begin // only build driver and sequencer if agent is active
    29              1                    ***0***                     driver      = SPI_slave_driver::type_id::create("driver", this);
    30              1                    ***0***                     sequencer   = SPI_slave_sequencer::type_id::create("sequencer", this);
    31                                                           end
    32                                               
    33              1                          1                 monitor = SPI_slave_monitor::type_id::create("monitor", this);
    34              1                          1                 agent_ap = new("agent_ap", this);
    35                                                       endfunction : build_phase
    36                                               
    37                                                       function void connect_phase(uvm_phase phase);
    38              1                          1                 super.connect_phase(phase);
    39                                                           if (SPI_slave_config.is_active == UVM_ACTIVE) begin // only connect driver and sequencer if agent is active
    40              1                    ***0***                     driver.seq_item_port.connect(sequencer.seq_item_export);
    41              1                    ***0***                     driver.driver_vif       = SPI_slave_config.Slave_vif;
    42              1                    ***0***                     sequencer.sequencer_vif = SPI_slave_config.Slave_vif;
    43                                                           end
    44              1                          1                 monitor.monitor_ap.connect(agent_ap);
    45              1                          1                 monitor.monitor_vif = SPI_slave_config.Slave_vif;


=================================================================================
=== Instance: /SPI_slave_env_pkg
=== Design Unit: work.SPI_slave_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_env.sv
    1                                                package SPI_slave_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_slave_agent_pkg::*;
    5                                                    import SPI_slave_scoreboard_pkg::*;
    6                                                    import SPI_slave_coverage_pkg::*;
    7                                                
    8                                                    class SPI_slave_env extends uvm_env;
    9               1                    ***0***             `uvm_component_utils(SPI_slave_env)
    9               2                    ***0***     
    9               3                          2     
    10                                               
    11                                                       SPI_slave_agent agent;
    12                                                       SPI_slave_scoreboard scoreboard;
    13                                                       SPI_slave_coverage coverage;
    14                                               
    15                                                       function new(string name = "SPI_slave_env", uvm_component parent = null);
    16              1                          1                 super.new(name, parent);
    17                                                       endfunction : new
    18                                               
    19                                                       virtual function void build_phase(uvm_phase phase);
    20              1                          1                 super.build_phase(phase);
    21                                               
    22              1                          1                 agent       = SPI_slave_agent::type_id::create("agent", this);
    23              1                          1                 scoreboard  = SPI_slave_scoreboard::type_id::create("scoreboard", this);
    24              1                          1                 coverage    = SPI_slave_coverage::type_id::create("coverage", this);
    25                                                       endfunction : build_phase
    26                                               
    27                                                       virtual function void connect_phase(uvm_phase phase);
    28              1                          1                 super.connect_phase(phase);
    29              1                          1                 agent.agent_ap.connect(scoreboard.sb_export);
    30              1                          1                 agent.agent_ap.connect(coverage.cov_export);


=================================================================================
=== Instance: /Wrapper_coverage_pkg
=== Design Unit: work.Wrapper_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          3        na        na        na
            Covergroup Bins         11        11         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /Wrapper_coverage_pkg/Wrapper_coverage/cg_Wrapper 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    11         11          -                      
    missing/total bins:                                     0         11          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_SS_n                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_MOSI                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_MOSI_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/Wrapper_coverage_pkg::Wrapper_coverage::cg_Wrapper  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    11         11          -                      
    missing/total bins:                                     0         11          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_SS_n                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin SS_n_OTHER                                   2138          1          -    Covered              
        bin SS_n_READ_DATA                                350          1          -    Covered              
        bin SS_n_one2zero                                3431          1          -    Covered              
    Coverpoint cp_MOSI                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_address                                8011          1          -    Covered              
        bin write_data                                   5678          1          -    Covered              
        bin read_address                                 5351          1          -    Covered              
        bin read_data                                    7128          1          -    Covered              
    Cross cross_MOSI_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin Read_data_SS_n_READ_DATA                   94          1          -    Covered              
            bin Write_data_SS_n_OTHER                       5          1          -    Covered              
            bin Read_address_SS_n_OTHER                     7          1          -    Covered              
            bin Write_address_SS_n_OTHER                  712          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /Wrapper_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_coverage.sv
    1                                                package Wrapper_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                    import Wrapper_shared_pkg::*;
    6                                                
    7                                                    class Wrapper_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(Wrapper_coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(Wrapper_seq_item) cov_export;
    10                                                       uvm_tlm_analysis_fifo #(Wrapper_seq_item) cov_fifo;
    11                                                       Wrapper_seq_item cov_item;
    12                                               
    13                                                       // Functional Coverage
    14                                                       covergroup cg_Wrapper;
    15                                                           cp_SS_n: coverpoint cov_item.SS_n {
    16                                                               bins SS_n_OTHER     = (1=> 0[*13] => 1);
    17                                                               bins SS_n_READ_DATA = (1=> 0[*23] => 1);
    18                                                               bins SS_n_one2zero  = (1 => 0);
    19                                                           }
    20                                                           cp_MOSI: coverpoint cov_item.MOSI {
    21                                                               bins write_address  = (0=>0=>0);
    22                                                               bins write_data     = (0=>0=>1);
    23                                                               bins read_address   = (1=>1=>0);
    24                                                               bins read_data      = (1=>1=>1);
    25                                                           }
    26                                                           cross_MOSI_SS_n: cross cp_MOSI, cp_SS_n {
    27                                                               option.cross_auto_bin_max = 0;
    28                                                               bins Read_data_SS_n_READ_DATA   = binsof(cp_MOSI.read_data) && binsof(cp_SS_n.SS_n_READ_DATA);
    29                                                               bins Write_data_SS_n_OTHER      = binsof(cp_MOSI.write_data) && binsof(cp_SS_n.SS_n_OTHER);
    30                                                               bins Read_address_SS_n_OTHER    = binsof(cp_MOSI.read_address) && binsof(cp_SS_n.SS_n_OTHER);
    31                                                               bins Write_address_SS_n_OTHER   = binsof(cp_MOSI.write_address) && binsof(cp_SS_n.SS_n_OTHER);
    32                                                           }
    33                                                           
    34                                                       endgroup : cg_Wrapper
    35                                               
    36                                                       function new(string name = "Wrapper_coverage", uvm_component parent = null);
    37              1                          1                 super.new(name, parent);
    38              1                          1                 cg_Wrapper = new();
    39                                                       endfunction
    40                                               
    41                                                       function void build_phase(uvm_phase phase);
    42              1                          1                 super.build_phase(phase);
    43              1                          1                 cov_export  = new("cov_export", this);
    44              1                          1                 cov_fifo    = new("cov_fifo", this);
    45                                                       endfunction : build_phase
    46                                               
    47                                                       function void connect_phase(uvm_phase phase);
    48              1                          1                 super.connect_phase(phase);
    49              1                          1                 cov_export.connect(cov_fifo.analysis_export);
    50                                                       endfunction : connect_phase
    51                                               
    52                                                       task run_phase(uvm_phase phase);
    53              1                          1                 super.run_phase(phase);
    54              1                          1                 forever begin
    55              1                      46220                     cov_fifo.get(cov_item);
    56              1                      46219                     cg_Wrapper.sample();


=================================================================================
=== Instance: /Wrapper_scoreboard_pkg
=== Design Unit: work.Wrapper_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /Wrapper_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_scoreboard.sv
------------------------------------IF Branch------------------------------------
    32                                     46219     Count coming in to IF
    32              1                    ***0***                     if (seq_item_sb.MISO !== seq_item_sb.MISO_ref)
    39              1                      46219                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                   ***0***     Count coming in to IF
    34              1                    ***0***                         `uvm_error("run_phase", $sformatf("Mismatch: MISO=%0b, MISO_ref=%0b, %s",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    40                                     46219     Count coming in to IF
    40              1                    ***0***                         `uvm_info("run_phase", $sformatf("Match: MISO=%0b, MISO_ref=%0b",
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1                 `uvm_info("report_phase", $sformatf("Total Correct: %0d, Total Errors: %0d", correct_count, error_count), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         0         1     0.00%

================================Condition Details================================

Condition Coverage for instance /Wrapper_scoreboard_pkg --

  File Wrapper_scoreboard.sv
----------------Focused Condition View-------------------
Line       32 Item    1  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                             Input Term   Covered  Reason for no coverage   Hint
                                            -----------  --------  -----------------------  --------------
  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                               Non-masking condition(s)      
 ---------  ---------  --------------------                                     -------------------------     
  Row   1:          1  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.MISO !== this.seq_item_sb.MISO_ref)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        14         5    73.68%

================================Statement Details================================

Statement Coverage for instance /Wrapper_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_scoreboard.sv
    1                                                package Wrapper_scoreboard_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                
    6                                                    class Wrapper_scoreboard extends uvm_scoreboard;
    7               1                    ***0***             `uvm_component_utils(Wrapper_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(Wrapper_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(Wrapper_seq_item) sb_fifo;
    10                                                       Wrapper_seq_item seq_item_sb;
    11                                               
    12              1                          1             int error_count =0; int correct_count=0;
    12              2                          1     
    13                                               
    14                                                       function new(string name = "Wrapper_scoreboard", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 sb_export = new("sb_export", this);
    21              1                          1                 sb_fifo = new("sb_fifo", this);
    22                                                       endfunction
    23                                               
    24                                                       function void connect_phase(uvm_phase phase);
    25              1                          1                 super.connect_phase(phase);
    26              1                          1                 sb_export.connect(sb_fifo.analysis_export);
    27                                                       endfunction
    28                                               
    29                                                       task run_phase(uvm_phase phase);
    30              1                          1                 forever begin
    31              1                      46220                     sb_fifo.get(seq_item_sb);
    32                                                               if (seq_item_sb.MISO !== seq_item_sb.MISO_ref)
    33                                                               begin
    34              1                    ***0***                         `uvm_error("run_phase", $sformatf("Mismatch: MISO=%0b, MISO_ref=%0b, %s",
    35                                                                       seq_item_sb.MISO, seq_item_sb.MISO_ref,
    36                                                                       seq_item_sb.convert2string_stimulus()))
    37              1                    ***0***                         error_count++;
    38                                                               end
    39                                                               else begin
    40              1                    ***0***                         `uvm_info("run_phase", $sformatf("Match: MISO=%0b, MISO_ref=%0b",
    41                                                                       seq_item_sb.MISO, seq_item_sb.MISO_ref), UVM_HIGH)
    42              1                      46219                         correct_count++;
    43                                                               end
    44                                                           end
    45                                                       endtask
    46                                               
    47                                                       function void report_phase(uvm_phase phase);
    48              1                          1                 super.report_phase(phase);
    49              1                          1                 `uvm_info("report_phase", $sformatf("Total Correct: %0d, Total Errors: %0d", correct_count, error_count), UVM_MEDIUM)


=================================================================================
=== Instance: /Wrapper_monitor_pkg
=== Design Unit: work.Wrapper_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /Wrapper_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_monitor.sv
------------------------------------IF Branch------------------------------------
    35                                     46219     Count coming in to IF
    35              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        14         3    82.35%

================================Statement Details================================

Statement Coverage for instance /Wrapper_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_monitor.sv
    1                                                package Wrapper_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                
    6                                                    class Wrapper_monitor extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(Wrapper_monitor)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        virtual Wrapper_if monitor_vif;
    10                                                       Wrapper_seq_item rsp_seq_item;
    11                                                       uvm_analysis_port #(Wrapper_seq_item) monitor_ap;
    12                                               
    13                                                       function new(string name = "Wrapper_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction : new
    16                                               
    17                                                       function void build_phase(uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 monitor_ap = new("monitor_ap", this);
    20                                                       endfunction : build_phase
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                      46220                     rsp_seq_item = Wrapper_seq_item::type_id::create("rsp_seq_item");
    26                                               
    27              1                      46220                     @(negedge monitor_vif.clk);
    28              1                      46219                     rsp_seq_item.SS_n            = monitor_vif.SS_n;
    29              1                      46219                     rsp_seq_item.rst_n           = monitor_vif.rst_n;
    30              1                      46219                     rsp_seq_item.MOSI            = monitor_vif.MOSI;
    31              1                      46219                     rsp_seq_item.MISO            = monitor_vif.MISO;
    32              1                      46219                     rsp_seq_item.MISO_ref        = monitor_vif.MISO_ref;
    33                                               
    34              1                      46219                     monitor_ap.write(rsp_seq_item);
    35              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /Wrapper_driver_pkg
=== Design Unit: work.Wrapper_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /Wrapper_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_driver.sv
------------------------------------IF Branch------------------------------------
    30                                     46219     Count coming in to IF
    30              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)
                                           46219     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        13         3    81.25%

================================Statement Details================================

Statement Coverage for instance /Wrapper_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_driver.sv
    1                                                package Wrapper_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_seq_item_pkg::*;
    5                                                
    6                                                    class Wrapper_driver extends uvm_driver #(Wrapper_seq_item);
    7               1                    ***0***             `uvm_component_utils(Wrapper_driver)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        virtual Wrapper_if driver_vif;
    10                                                       Wrapper_seq_item stim_seq_item;
    11                                               
    12                                                       function new(string name = "Wrapper_driver", uvm_component parent = null);
    13              1                          1                 super.new(name, parent);
    14                                                       endfunction : new
    15                                               
    16                                                       task run_phase(uvm_phase phase);
    17              1                          1                 super.run_phase(phase);
    18              1                          1                 forever begin
    19              1                      46220                     stim_seq_item = Wrapper_seq_item::type_id::create("stim_seq_item");
    20              1                      46220                     seq_item_port.get_next_item(stim_seq_item);
    21                                               
    22              1                      46219                     driver_vif.rst_n            = stim_seq_item.rst_n;
    23              1                      46219                     driver_vif.SS_n             = stim_seq_item.SS_n;
    24              1                      46219                     driver_vif.MOSI             = stim_seq_item.MOSI;
    25              1                      46219                     driver_vif.array_for_MOSI   = stim_seq_item.array_for_MOSI;
    26              1                      46219                     driver_vif.old_operation    = stim_seq_item.old_operation;
    27              1                      46219                     @(negedge driver_vif.clk);
    28                                               
    29              1                      46219                     seq_item_port.item_done();
    30              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /Wrapper_agent_pkg
=== Design Unit: work.Wrapper_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /Wrapper_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_agent.sv
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***                 if (!uvm_config_db#(Wrapper_cfg)::get(this, "", "wrapper_CFG", Wrapper_config)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***                     `uvm_fatal("NOVIF", "Cannot get cfg from uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              1                          1                 if (Wrapper_config.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                          1                 if (Wrapper_config.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        13         3    81.25%

================================Statement Details================================

Statement Coverage for instance /Wrapper_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_agent.sv
    1                                                package Wrapper_agent_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_driver_pkg::*;
    5                                                    import Wrapper_monitor_pkg::*;
    6                                                    import Wrapper_sequencer_pkg::*;
    7                                                    import Wrapper_config_pkg::*;
    8                                                    import Wrapper_seq_item_pkg::*;
    9                                                
    10                                                   class Wrapper_agent extends uvm_agent;
    11              1                    ***0***             `uvm_component_utils(Wrapper_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                                       Wrapper_driver driver;
    13                                                       Wrapper_monitor monitor;
    14                                                       Wrapper_sequencer sequencer;
    15                                                       Wrapper_cfg Wrapper_config;
    16                                                       uvm_analysis_port #(Wrapper_seq_item) agent_ap;
    17                                               
    18                                                       function new(string name = "Wrapper_agent", uvm_component parent = null);
    19              1                          1                 super.new(name, parent);
    20                                                       endfunction : new
    21                                               
    22                                                       function void build_phase(uvm_phase phase);
    23              1                          1                 super.build_phase(phase);
    24                                               
    25                                                           if (!uvm_config_db#(Wrapper_cfg)::get(this, "", "wrapper_CFG", Wrapper_config)) begin
    26              1                    ***0***                     `uvm_fatal("NOVIF", "Cannot get cfg from uvm_config_db")
    27                                                           end
    28                                                           if (Wrapper_config.is_active == UVM_ACTIVE) begin
    29              1                          1                     driver      = Wrapper_driver::type_id::create("driver", this);
    30              1                          1                     sequencer   = Wrapper_sequencer::type_id::create("sequencer", this);
    31                                                           end
    32              1                          1                 monitor = Wrapper_monitor::type_id::create("monitor", this);
    33              1                          1                 agent_ap = new("agent_ap", this);
    34                                                       endfunction : build_phase
    35                                               
    36                                                       function void connect_phase(uvm_phase phase);
    37              1                          1                 super.connect_phase(phase);
    38                                                           if (Wrapper_config.is_active == UVM_ACTIVE) begin
    39              1                          1                     driver.seq_item_port.connect(sequencer.seq_item_export);
    40              1                          1                     driver.driver_vif       = Wrapper_config.Wrapper_vif;
    41              1                          1                     sequencer.sequencer_vif = Wrapper_config.Wrapper_vif;
    42                                                           end
    43              1                          1                 monitor.monitor_ap.connect(agent_ap);
    44              1                          1                 monitor.monitor_vif         = Wrapper_config.Wrapper_vif;


=================================================================================
=== Instance: /Wrapper_env_pkg
=== Design Unit: work.Wrapper_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /Wrapper_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_env.sv
    1                                                package Wrapper_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_agent_pkg::*;
    5                                                    import Wrapper_scoreboard_pkg::*;
    6                                                    import Wrapper_coverage_pkg::*;
    7                                                
    8                                                    class Wrapper_env extends uvm_env;
    9               1                    ***0***             `uvm_component_utils(Wrapper_env)
    9               2                    ***0***     
    9               3                          2     
    10                                               
    11                                                       Wrapper_agent agent;
    12                                                       Wrapper_scoreboard scoreboard;
    13                                                       Wrapper_coverage coverage;
    14                                               
    15                                                       function new(string name = "Wrapper_env", uvm_component parent = null);
    16              1                          1                 super.new(name, parent);
    17                                                       endfunction : new
    18                                               
    19                                                       virtual function void build_phase(uvm_phase phase);
    20              1                          1                 super.build_phase(phase);
    21                                               
    22              1                          1                 agent       = Wrapper_agent::type_id::create("agent", this);
    23              1                          1                 scoreboard  = Wrapper_scoreboard::type_id::create("scoreboard", this);
    24              1                          1                 coverage    = Wrapper_coverage::type_id::create("coverage", this);
    25                                                       endfunction : build_phase
    26                                               
    27                                                       virtual function void connect_phase(uvm_phase phase);
    28              1                          1                 super.connect_phase(phase);
    29              1                          1                 agent.agent_ap.connect(scoreboard.sb_export);
    30              1                          1                 agent.agent_ap.connect(coverage.cov_export);


=================================================================================
=== Instance: /Wrapper_test_pkg
=== Design Unit: work.Wrapper_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        28        11        17    39.28%

================================Branch Details================================

Branch Coverage for instance /Wrapper_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_test.sv
------------------------------------IF Branch------------------------------------
    46                                         1     Count coming in to IF
    46              1                    ***0***                 if(!uvm_config_db#(virtual Wrapper_if)::get(this, "", "wrapper_vif", Wrapper_config.Wrapper_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    47                                   ***0***     Count coming in to IF
    47              1                    ***0***                     `uvm_fatal("NOVIF", "Virtual interface must be set for:")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                         1     Count coming in to IF
    48              1                    ***0***                 if(!uvm_config_db#(virtual SPI_slave_if)::get(this, "", "slave_vif", Slave_config.Slave_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    49                                   ***0***     Count coming in to IF
    49              1                    ***0***                     `uvm_fatal("NOVIF", "Virtual interface must be set for:")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                         1     Count coming in to IF
    50              1                    ***0***                 if(!uvm_config_db#(virtual Ram_if)::get(this, "", "ram_vif", Ram_config.Ram_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51              1                    ***0***                     `uvm_fatal("NOVIF", "Virtual interface must be set for:")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    68                                         1     Count coming in to IF
    68              1                          1                 `uvm_info("run_phase", "Starting reset sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    70                                         1     Count coming in to IF
    70              1                          1                 `uvm_info("run_phase", "Completed reset sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    73                                         1     Count coming in to IF
    73              1                          1                 `uvm_info("run_phase", "Starting write only sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    75                                         1     Count coming in to IF
    75              1                          1                 `uvm_info("run_phase", "Completed write only sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    77                                         1     Count coming in to IF
    77              1                          1                 `uvm_info("run_phase", "Starting read only sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    79                                         1     Count coming in to IF
    79              1                          1                 `uvm_info("run_phase", "Completed read only sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    81                                         1     Count coming in to IF
    81              1                          1                 `uvm_info("run_phase", "Starting write read sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    83                                         1     Count coming in to IF
    83              1                          1                 `uvm_info("run_phase", "Completed write read sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      39        34         5    87.17%

================================Statement Details================================

Statement Coverage for instance /Wrapper_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Wrapper_test.sv
    1                                                package Wrapper_test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Wrapper_env_pkg::*;
    5                                                    import SPI_slave_env_pkg::*;
    6                                                    import Ram_env_pkg::*;
    7                                                    import Wrapper_config_pkg::*;
    8                                                    import SPI_slave_config_pkg::*;
    9                                                    import Ram_config_pkg::*;
    10                                                   import Wrapper_read_only_seq_pkg::*;
    11                                                   import Wrapper_write_read_seq_pkg::*;
    12                                                   import Wrapper_write_only_seq_pkg::*;
    13                                                   import Wrapper_reset_seq_pkg::*;
    14                                               
    15                                                   class Wrapper_test extends uvm_test;
    16              1                    ***0***             `uvm_component_utils(Wrapper_test)
    16              2                    ***0***     
    16              3                          4     
    17                                               
    18                                                       Wrapper_env wrapper_env;
    19                                                       SPI_slave_env slave_env;
    20                                                       Ram_env ram_env;
    21                                                       Wrapper_read_only_seq read_only_sequence;
    22                                                       Wrapper_write_read_seq write_read_sequence;
    23                                                       Wrapper_write_only_seq write_only_sequence;
    24                                                       Wrapper_reset_seq reset_sequence;
    25                                                       Wrapper_cfg Wrapper_config;
    26                                                       SPI_slave_cfg Slave_config;
    27                                                       Ram_cfg Ram_config;
    28                                                       
    29                                                       function new(string name = "Wrapper_test", uvm_component parent = null);
    30              1                          1                 super.new(name, parent);
    31                                                       endfunction : new
    32                                               
    33                                                       function void build_phase(uvm_phase phase);
    34              1                          1                 super.build_phase(phase);
    35              1                          1                 wrapper_env          = Wrapper_env::type_id::create("wrapper_env", this);
    36              1                          1                 slave_env            = SPI_slave_env::type_id::create("slave_env", this);
    37              1                          1                 ram_env              = Ram_env::type_id::create("ram_env", this);
    38              1                          1                 read_only_sequence   = Wrapper_read_only_seq::type_id::create("read_only_sequence");
    39              1                          1                 write_read_sequence  = Wrapper_write_read_seq::type_id::create("write_read_sequence");
    40              1                          1                 write_only_sequence  = Wrapper_write_only_seq::type_id::create("write_only_sequence");
    41              1                          1                 reset_sequence       = Wrapper_reset_seq::type_id::create("reset_sequence");
    42              1                          1                 Wrapper_config       = Wrapper_cfg::type_id::create("Wrapper_config");
    43              1                          1                 Slave_config         = SPI_slave_cfg::type_id::create("Slave_config");
    44              1                          1                 Ram_config           = Ram_cfg::type_id::create("Ram_config");
    45                                               
    46                                                           if(!uvm_config_db#(virtual Wrapper_if)::get(this, "", "wrapper_vif", Wrapper_config.Wrapper_vif))
    47              1                    ***0***                     `uvm_fatal("NOVIF", "Virtual interface must be set for:")
    48                                                           if(!uvm_config_db#(virtual SPI_slave_if)::get(this, "", "slave_vif", Slave_config.Slave_vif))
    49              1                    ***0***                     `uvm_fatal("NOVIF", "Virtual interface must be set for:")
    50                                                           if(!uvm_config_db#(virtual Ram_if)::get(this, "", "ram_vif", Ram_config.Ram_vif))
    51              1                    ***0***                     `uvm_fatal("NOVIF", "Virtual interface must be set for:")
    52                                               
    53              1                          1                 Wrapper_config.is_active    = UVM_ACTIVE;
    54              1                          1                 Slave_config.is_active      = UVM_PASSIVE;
    55              1                          1                 Ram_config.is_active        = UVM_PASSIVE;
    56                                                               
    57              1                          1                 uvm_config_db#(Wrapper_cfg)::set(this, "wrapper_env.*", "wrapper_CFG", Wrapper_config);
    58              1                          1                 uvm_config_db#(SPI_slave_cfg)::set(this, "slave_env.*", "slave_CFG", Slave_config);
    59              1                          1                 uvm_config_db#(Ram_cfg)::set(this, "ram_env.*", "ram_CFG", Ram_config);
    60                                                           
    61                                                       endfunction : build_phase
    62                                               
    63                                                       task run_phase(uvm_phase phase);
    64              1                          1                 super.run_phase(phase);
    65              1                          1                 phase.raise_objection(this);
    66                                               
    67                                                           // Start with reset sequence
    68              1                          1                 `uvm_info("run_phase", "Starting reset sequence", UVM_LOW)
    69              1                          1                 reset_sequence.start(wrapper_env.agent.sequencer);
    70              1                          1                 `uvm_info("run_phase", "Completed reset sequence", UVM_LOW)
    71                                               
    72                                                           // Then run main sequences
    73              1                          1                 `uvm_info("run_phase", "Starting write only sequence", UVM_LOW)
    74              1                          1                 write_only_sequence.start(wrapper_env.agent.sequencer);
    75              1                          1                 `uvm_info("run_phase", "Completed write only sequence", UVM_LOW)
    76                                               
    77              1                          1                 `uvm_info("run_phase", "Starting read only sequence", UVM_LOW)
    78              1                          1                 read_only_sequence.start(wrapper_env.agent.sequencer);
    79              1                          1                 `uvm_info("run_phase", "Completed read only sequence", UVM_LOW)
    80                                               
    81              1                          1                 `uvm_info("run_phase", "Starting write read sequence", UVM_LOW)
    82              1                          1                 write_read_sequence.start(wrapper_env.agent.sequencer);
    83              1                          1                 `uvm_info("run_phase", "Completed write read sequence", UVM_LOW)
    84                                               
    85              1                          1                 phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /Ram_coverage_pkg/Ram_coverage/cg_Ram           100.00%        100          -    Covered              
    covered/total bins:                                    13         13          -                      
    missing/total bins:                                     0         13          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_din                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_rx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_tx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_din_rx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_din_tx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/Ram_coverage_pkg::Ram_coverage::cg_Ram  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    13         13          -                      
    missing/total bins:                                     0         13          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_din                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        bin all_values[0]                               17122          1          -    Covered              
        bin all_values[1]                                9231          1          -    Covered              
        bin all_values[2]                                9762          1          -    Covered              
        bin all_values[3]                               10104          1          -    Covered              
        bin read_data                                   10104          1          -    Covered              
        bin wr_addr_2_wr_data                             540          1          -    Covered              
        bin rd_addr_2_rd_addr                             546          1          -    Covered              
    Coverpoint cp_rx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin rx_valid_0                                  41207          1          -    Covered              
        bin rx_valid_1                                   5012          1          -    Covered              
    Coverpoint cp_tx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin tx_valid_0                                  38331          1          -    Covered              
        bin tx_valid_1                                   7888          1          -    Covered              
    Cross cross_din_rx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_all_values_rx_valid_1                5012          1          -    Covered              
    Cross cross_din_tx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_read_data_tx_valid_1                 5110          1          -    Covered              
 TYPE /SPI_slave_coverage_pkg/SPI_slave_coverage/cg_SPI_slave 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    28         28          -                      
    missing/total bins:                                     0         28          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_rxdata                              100.00%        100          -    Covered              
        covered/total bins:                                17         17          -                      
        missing/total bins:                                 0         17          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_SS_n                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_MOSI                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_MOSI_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_slave_coverage_pkg::SPI_slave_coverage::cg_SPI_slave  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    28         28          -                      
    missing/total bins:                                     0         28          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_rxdata                              100.00%        100          -    Covered              
        covered/total bins:                                17         17          -                      
        missing/total bins:                                 0         17          -                      
        % Hit:                                        100.00%        100          -                      
        ignore_bin rx_data_bins_ignored[0=>3]               0                     -    ZERO                 
        ignore_bin rx_data_bins_ignored[2=>1]               0                     -    ZERO                 
        ignore_bin rx_data_bins_ignored[1=>2]               0                     -    ZERO                 
        bin all_values[0]                               17122          1          -    Covered              
        bin all_values[1]                                9231          1          -    Covered              
        bin all_values[2]                                9762          1          -    Covered              
        bin all_values[3]                               10104          1          -    Covered              
        bin all_transitions[0=>0]                       16131          1          -    Covered              
        bin all_transitions[0=>1]                         540          1          -    Covered              
        bin all_transitions[0=>2]                         451          1          -    Covered              
        bin all_transitions[1=>0]                         517          1          -    Covered              
        bin all_transitions[1=>1]                        8639          1          -    Covered              
        bin all_transitions[1=>3]                          75          1          -    Covered              
        bin all_transitions[2=>0]                         231          1          -    Covered              
        bin all_transitions[2=>2]                        8985          1          -    Covered              
        bin all_transitions[2=>3]                         546          1          -    Covered              
        bin all_transitions[3=>0]                         242          1          -    Covered              
        bin all_transitions[3=>1]                          52          1          -    Covered              
        bin all_transitions[3=>2]                         326          1          -    Covered              
        bin all_transitions[3=>3]                        9483          1          -    Covered              
    Coverpoint cp_SS_n                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin SS_n_OTHER                                   2138          1          -    Covered              
        bin SS_n_READ_DATA                                350          1          -    Covered              
        bin SS_n_one2zero                                3431          1          -    Covered              
    Coverpoint cp_MOSI                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_address                                8011          1          -    Covered              
        bin write_data                                   5678          1          -    Covered              
        bin read_address                                 5351          1          -    Covered              
        bin read_data                                    7128          1          -    Covered              
    Cross cross_MOSI_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin Read_data_SS_n_one2zero                   535          1          -    Covered              
            bin Write_data_SS_n_one2zero                  835          1          -    Covered              
            bin Read_address_SS_n_one2zero                503          1          -    Covered              
            bin Write_address_SS_n_one2zero               860          1          -    Covered              
 TYPE /Wrapper_coverage_pkg/Wrapper_coverage/cg_Wrapper 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    11         11          -                      
    missing/total bins:                                     0         11          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_SS_n                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_MOSI                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_MOSI_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/Wrapper_coverage_pkg::Wrapper_coverage::cg_Wrapper  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    11         11          -                      
    missing/total bins:                                     0         11          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_SS_n                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin SS_n_OTHER                                   2138          1          -    Covered              
        bin SS_n_READ_DATA                                350          1          -    Covered              
        bin SS_n_one2zero                                3431          1          -    Covered              
    Coverpoint cp_MOSI                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_address                                8011          1          -    Covered              
        bin write_data                                   5678          1          -    Covered              
        bin read_address                                 5351          1          -    Covered              
        bin read_data                                    7128          1          -    Covered              
    Cross cross_MOSI_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin Read_data_SS_n_READ_DATA                   94          1          -    Covered              
            bin Write_data_SS_n_OTHER                       5          1          -    Covered              
            bin Read_address_SS_n_OTHER                     7          1          -    Covered              
            bin Write_address_SS_n_OTHER                  712          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 3

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SLAVE_instance/cover__p_READ_DATA_to_IDLE 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(182)
                                                                               328 Covered   
/top/DUT/SLAVE_instance/cover__p_READ_ADD_to_IDLE 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(181)
                                                                               598 Covered   
/top/DUT/SLAVE_instance/cover__p_WRITE_to_IDLE 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(180)
                                                                              1395 Covered   
/top/DUT/SLAVE_instance/cover__p_CHK_CMD_to_WRITE 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(179)
                                                                              1829 Covered   
/top/DUT/SLAVE_instance/cover__p_CHK_CMD_to_READ_DATA 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(178)
                                                                               563 Covered   
/top/DUT/SLAVE_instance/cover__p_CHK_CMD_to_READ_ADD 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(177)
                                                                               790 Covered   
/top/DUT/SLAVE_instance/cover__p_IDLE_to_CHK_CMD 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(176)
                                                                              3257 Covered   
/top/wrapper_sva/cover__write_data_stable_MISO 
                                         Wrapper_sva Verilog  SVA  Wrapper_sva.sv(44)
                                                                               605 Covered   
/top/wrapper_sva/cover__read_add_stable_MISO 
                                         Wrapper_sva Verilog  SVA  Wrapper_sva.sv(43)
                                                                               619 Covered   
/top/wrapper_sva/cover__write_add_stable_MISO 
                                         Wrapper_sva Verilog  SVA  Wrapper_sva.sv(42)
                                                                               818 Covered   
/top/wrapper_sva/cover__reset_check      Wrapper_sva Verilog  SVA  Wrapper_sva.sv(41)
                                                                              1076 Covered   
/top/spi_slave_sva/cover__SS_n_eventually_after_10_cycles 
                                         SPI_slave_sva Verilog  SVA  SPI_slave_sva.sv(39)
                                                                              2377 Covered   
/top/spi_slave_sva/cover__rx_valid_after_10_cycles 
                                         SPI_slave_sva Verilog  SVA  SPI_slave_sva.sv(38)
                                                                              2480 Covered   
/top/spi_slave_sva/cover__reset_check    SPI_slave_sva Verilog  SVA  SPI_slave_sva.sv(37)
                                                                              1076 Covered   
/top/ram_sva/cover__read_addr_read_data  Ram_sva Verilog  SVA  Ram_sva.sv(58)   876 Covered   
/top/ram_sva/cover__write_addr_write_data 
                                         Ram_sva Verilog  SVA  Ram_sva.sv(57)   954 Covered   
/top/ram_sva/cover__other_tx_valid       Ram_sva Verilog  SVA  Ram_sva.sv(56)  3937 Covered   
/top/ram_sva/cover__read_data_tx_valid   Ram_sva Verilog  SVA  Ram_sva.sv(55)   468 Covered   
/top/ram_sva/cover__reset                Ram_sva Verilog  SVA  Ram_sva.sv(54)  1076 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 19

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SLAVE_instance/assert__p_READ_DATA_to_IDLE
                     SPI_slave.sv(173)                  0          1
/top/DUT/SLAVE_instance/assert__p_READ_ADD_to_IDLE
                     SPI_slave.sv(172)                  0          1
/top/DUT/SLAVE_instance/assert__p_WRITE_to_IDLE
                     SPI_slave.sv(171)                  0          1
/top/DUT/SLAVE_instance/assert__p_CHK_CMD_to_WRITE
                     SPI_slave.sv(170)                  0          1
/top/DUT/SLAVE_instance/assert__p_CHK_CMD_to_READ_DATA
                     SPI_slave.sv(169)                  0          1
/top/DUT/SLAVE_instance/assert__p_CHK_CMD_to_READ_ADD
                     SPI_slave.sv(168)                  0          1
/top/DUT/SLAVE_instance/assert__p_IDLE_to_CHK_CMD
                     SPI_slave.sv(167)                  0          1
/top/wrapper_sva/assert__write_data_stable_MISO
                     Wrapper_sva.sv(39)                 0          1
/top/wrapper_sva/assert__read_add_stable_MISO
                     Wrapper_sva.sv(38)                 0          1
/top/wrapper_sva/assert__write_add_stable_MISO
                     Wrapper_sva.sv(37)                 0          1
/top/wrapper_sva/assert__reset_check
                     Wrapper_sva.sv(36)                 0          1
/top/spi_slave_sva/assert__SS_n_eventually_after_10_cycles
                     SPI_slave_sva.sv(34)               0          1
/top/spi_slave_sva/assert__rx_valid_after_10_cycles
                     SPI_slave_sva.sv(33)               0          1
/top/spi_slave_sva/assert__reset_check
                     SPI_slave_sva.sv(32)               0          1
/top/ram_sva/assert__read_addr_read_data
                     Ram_sva.sv(51)                     0          1
/top/ram_sva/assert__write_addr_write_data
                     Ram_sva.sv(50)                     0          1
/top/ram_sva/assert__other_tx_valid
                     Ram_sva.sv(49)                     0          1
/top/ram_sva/assert__read_data_tx_valid
                     Ram_sva.sv(48)                     0          1
/top/ram_sva/assert__reset
                     Ram_sva.sv(47)                     0          1
/Wrapper_write_only_seq_pkg/Wrapper_write_only_seq/body/#anonblk#99891559#21#4#/#ublk#99891559#25/immed__31
                     Wrapper_write_only_seq.sv(31)
                                                        0          1
/Wrapper_write_only_seq_pkg/Wrapper_write_only_seq/body/#anonblk#99891559#21#4#/#ublk#99891559#34/immed__41
                     Wrapper_write_only_seq.sv(41)
                                                        0          1
/Wrapper_write_only_seq_pkg/Wrapper_write_only_seq/body/#anonblk#99891559#21#4#/#ublk#99891559#44/immed__52
                     Wrapper_write_only_seq.sv(52)
                                                        0          1
/Wrapper_write_read_seq_pkg/Wrapper_write_read_seq/body/#anonblk#20872807#21#4#/#ublk#20872807#25/immed__31
                     Wrapper_write_read_seq.sv(31)
                                                        0          1
/Wrapper_write_read_seq_pkg/Wrapper_write_read_seq/body/#anonblk#20872807#21#4#/#ublk#20872807#34/immed__41
                     Wrapper_write_read_seq.sv(41)
                                                        0          1
/Wrapper_write_read_seq_pkg/Wrapper_write_read_seq/body/#anonblk#20872807#21#4#/#ublk#20872807#44/immed__52
                     Wrapper_write_read_seq.sv(52)
                                                        0          1
/Wrapper_read_only_seq_pkg/Wrapper_read_only_seq/body/#anonblk#151086935#21#4#/#ublk#151086935#25/immed__31
                     Wrapper_read_only_seq.sv(31)
                                                        0          1
/Wrapper_read_only_seq_pkg/Wrapper_read_only_seq/body/#anonblk#151086935#21#4#/#ublk#151086935#34/immed__41
                     Wrapper_read_only_seq.sv(41)
                                                        0          1
/Wrapper_read_only_seq_pkg/Wrapper_read_only_seq/body/#anonblk#151086935#21#4#/#ublk#151086935#44/immed__52
                     Wrapper_read_only_seq.sv(52)
                                                        0          1

Total Coverage By Instance (filtered view): 81.44%

