Coverage Report by instance with details

=================================================================================
=== Instance: /top/rif
=== Design Unit: work.Ram_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         62        62         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/rif --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          din[9-0]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                     dout_ref[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 
                                      tx_valid_ref           1           1      100.00 

Total Node Count     =         31 
Toggled Node Count   =         31 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (62 of 62 bins)

=================================================================================
=== Instance: /top/DUT/sva
=== Design Unit: work.Ram_sva
=================================================================================

Assertion Coverage:
    Assertions                       5         5         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/sva/assert__read_addr_read_data
                     Ram_sva.sv(51)                     0          1
/top/DUT/sva/assert__write_addr_write_data
                     Ram_sva.sv(50)                     0          1
/top/DUT/sva/assert__other_tx_valid
                     Ram_sva.sv(49)                     0          1
/top/DUT/sva/assert__read_data_tx_valid
                     Ram_sva.sv(48)                     0          1
/top/DUT/sva/assert__reset
                     Ram_sva.sv(47)                     0          1

Directive Coverage:
    Directives                       5         5         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/sva/cover__read_addr_read_data  Ram_sva Verilog  SVA  Ram_sva.sv(58)   476 Covered   
/top/DUT/sva/cover__write_addr_write_data 
                                         Ram_sva Verilog  SVA  Ram_sva.sv(57)   526 Covered   
/top/DUT/sva/cover__other_tx_valid       Ram_sva Verilog  SVA  Ram_sva.sv(56)  1642 Covered   
/top/DUT/sva/cover__read_data_tx_valid   Ram_sva Verilog  SVA  Ram_sva.sv(55)   439 Covered   
/top/DUT/sva/cover__reset                Ram_sva Verilog  SVA  Ram_sva.sv(54)   321 Covered   

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.RAM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         7         7         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM.sv
------------------------------------IF Branch------------------------------------
    8                                       3001     Count coming in to IF
    8               1                        321         if (~rif.rst_n) begin
    15              1                       2402             if (rif.rx_valid) begin
                                             278     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    16                                      2402     Count coming in to CASE
    17              1                        732                     2'b00   : Wr_Addr       <= rif.din[7:0];
    18              1                        558                     2'b01   : MEM[Wr_Addr]  <= rif.din[7:0];
    19              1                        557                     2'b10   : Rd_Addr       <= rif.din[7:0];
    20              1                        555                     2'b11   : rif.dout      <= MEM[Rd_Addr]; //bug: Wr_Addr ==> Rd_Addr
Branch totals: 4 hits of 4 branches = 100.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      2         2         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/DUT --

  File RAM.sv
----------------Focused Expression View-----------------
Line       24 Item    1  (rif.din[9] && rif.din[8])
Expression totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  rif.din[9]         Y
  rif.din[8]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rif.din[9]_0          -                             
  Row   2:          1  rif.din[9]_1          rif.din[8]                    
  Row   3:          1  rif.din[8]_0          rif.din[9]                    
  Row   4:          1  rif.din[8]_1          rif.din[9]                    


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM.sv
    1                                                module RAM (Ram_if.DUT rif);
    2                                                
    3                                                reg [7:0] MEM [255:0];
    4                                                
    5                                                reg [7:0] Rd_Addr, Wr_Addr;
    6                                                
    7               1                       3001     always @(posedge rif.clk) begin
    8                                                    if (~rif.rst_n) begin
    9               1                        321             rif.dout      <= 0;
    10              1                        321             rif.tx_valid  <= 0;
    11              1                        321             Rd_Addr       <= 0;
    12              1                        321             Wr_Addr       <= 0;
    13                                                   end
    14                                                   else
    15                                                       if (rif.rx_valid) begin
    16                                                           case (rif.din[9:8])
    17              1                        732                     2'b00   : Wr_Addr       <= rif.din[7:0];
    18              1                        558                     2'b01   : MEM[Wr_Addr]  <= rif.din[7:0];
    19              1                        557                     2'b10   : Rd_Addr       <= rif.din[7:0];
    20              1                        555                     2'b11   : rif.dout      <= MEM[Rd_Addr]; //bug: Wr_Addr ==> Rd_Addr
    21                                                               default : rif.dout      <= 0;
    22                                                           endcase
    23                                                           //bug: tx_valid condition should only be checked at rx_valid == 1.
    24              1                       2402                 rif.tx_valid <= (rif.din[9] && rif.din[8])? 1'b1 : 1'b0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         32        32         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      Rd_Addr[7-0]           1           1      100.00 
                                      Wr_Addr[7-0]           1           1      100.00 

Total Node Count     =         16 
Toggled Node Count   =         16 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (32 of 32 bins)

=================================================================================
=== Instance: /top/golden_model
=== Design Unit: work.Golden_ram
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         7         1    87.50%

================================Branch Details================================

Branch Coverage for instance /top/golden_model

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Golden_RAM.sv
------------------------------------IF Branch------------------------------------
    7                                       3001     Count coming in to IF
    7               1                        321             if (!rif.rst_n) begin
    13              1                       2402             else if (rif.rx_valid) begin
                                             278     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    14                                      2402     Count coming in to IF
    14              1                        732                 if (rif.din[9:8] == 2'b00) begin
    18              1                        558                 else if (rif.din[9:8] == 2'b01) begin
    22              1                        557                 else if (rif.din[9:8] == 2'b10) begin
    26              1                        555                 else if (rif.din[9:8] == 2'b11) begin
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         3         1    75.00%

================================Condition Details================================

Condition Coverage for instance /top/golden_model --

  File Golden_RAM.sv
----------------Focused Condition View-------------------
Line       14 Item    1  (rif.din[9:8] == 0)
Condition totals: 1 of 1 input term covered = 100.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (rif.din[9:8] == 0)         Y

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (rif.din[9:8] == 0)_0  -                             
  Row   2:          1  (rif.din[9:8] == 0)_1  -                             

----------------Focused Condition View-------------------
Line       18 Item    1  (rif.din[9:8] == 1)
Condition totals: 1 of 1 input term covered = 100.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (rif.din[9:8] == 1)         Y

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (rif.din[9:8] == 1)_0  -                             
  Row   2:          1  (rif.din[9:8] == 1)_1  -                             

----------------Focused Condition View-------------------
Line       22 Item    1  (rif.din[9:8] == 2)
Condition totals: 1 of 1 input term covered = 100.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (rif.din[9:8] == 2)         Y

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (rif.din[9:8] == 2)_0  -                             
  Row   2:          1  (rif.din[9:8] == 2)_1  -                             

----------------Focused Condition View-------------------
Line       26 Item    1  (rif.din[9:8] == 3)
Condition totals: 0 of 1 input term covered = 0.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (rif.din[9:8] == 3)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:    ***0***  (rif.din[9:8] == 3)_0  -                             
  Row   2:          1  (rif.din[9:8] == 3)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13        13         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/golden_model --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Golden_RAM.sv
    1                                                module Golden_ram (Ram_if.Golden rif);
    2                                                
    3                                                    reg [7:0] mem [255:0];
    4                                                    reg [7:0] rd_address, wr_address;
    5                                                
    6               1                       3001         always @(posedge rif.clk) begin
    7                                                        if (!rif.rst_n) begin
    8               1                        321                 rif.dout_ref <= 0;
    9               1                        321                 rif.tx_valid_ref <= 0;
    10              1                        321                 rd_address <= 0;
    11              1                        321                 wr_address <= 0;
    12                                                       end 
    13                                                       else if (rif.rx_valid) begin
    14                                                           if (rif.din[9:8] == 2'b00) begin
    15              1                        732                     wr_address <= rif.din [7:0];
    16              1                        732                     rif.tx_valid_ref <= 0; 
    17                                                           end 
    18                                                           else if (rif.din[9:8] == 2'b01) begin
    19              1                        558                     mem[wr_address] <= rif.din [7:0];
    20              1                        558                     rif.tx_valid_ref <= 0; 
    21                                                           end
    22                                                           else if (rif.din[9:8] == 2'b10) begin
    23              1                        557                     rd_address <= rif.din [7:0];
    24              1                        557                     rif.tx_valid_ref <= 0; 
    25                                                           end
    26                                                           else if (rif.din[9:8] == 2'b11) begin
    27              1                        555                     rif.dout_ref <= mem[rd_address];
    28              1                        555                     rif.tx_valid_ref <= 1; 

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         32        32         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/golden_model --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                   rd_address[7-0]           1           1      100.00 
                                   wr_address[7-0]           1           1      100.00 

Total Node Count     =         16 
Toggled Node Count   =         16 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (32 of 32 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_top.sv
    5                                                module top ();
    6                                                    bit clk;
    7                                                
    8               1                       6003         always #5 clk = ~clk;
    8               2                       6002     
    9                                                
    10                                                   Ram_if rif(clk);
    11                                               
    12                                                   RAM DUT (rif);
    13                                               
    14                                                   Golden_ram golden_model (rif);
    15                                               
    16                                                   bind RAM Ram_sva sva (rif);
    17                                               
    18                                                   initial begin
    19              1                          1             uvm_config_db#(virtual Ram_if)::set(null, "uvm_test_top", "vif", rif);
    20              1                          1             run_test("Ram_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /Ram_seq_item_pkg
=== Design Unit: work.Ram_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /Ram_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(Ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       3001     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(Ram_seq_item)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(Ram_seq_item)
    7               4                    ***0***             `uvm_object_utils(Ram_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       3001     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(Ram_seq_item)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(Ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_seq_item_pkg --

  File Ram_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         4        10    28.57%

================================Statement Details================================

Statement Coverage for instance /Ram_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_seq_item.sv
    1                                                package Ram_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_shared_pkg::*;
    5                                                
    6                                                    class Ram_seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(Ram_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                       3001     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                       3001     
    7              10                    ***0***     
    8                                                
    9                                                        rand bit            rst_n, rx_valid;
    10                                                       rand bit [9:0]      din;
    11                                                       bit                 tx_valid, tx_valid_ref;
    12                                                       bit      [7:0]      dout, dout_ref;
    13                                                       bit      [1:0]      old_operation;
    14                                               
    15                                                       function new(string name = "Ram_seq_item");
    16              1                       6008                 super.new(name);
    17                                                       endfunction : new
    18                                               
    19                                                       function string convert2string();
    20              1                    ***0***                 return $sformatf("%s rst_n=%b, din=0x%0h, tx_valid=%b, dout=0x%0h, rx_valid=%b, dout_ref=0x%0h, tx_valid_ref=%b",
    21                                                                    super.convert2string(), rst_n, din, tx_valid, dout, rx_valid, dout_ref, tx_valid_ref);
    22                                                       endfunction : convert2string
    23                                               
    24                                                       function string convert2string_stimulus();
    25              1                    ***0***                 return $sformatf("rst_n=%b, din=0x%0h, tx_valid=%b",
    26                                                                    rst_n, din, tx_valid);
    27                                                       endfunction : convert2string_stimulus
    28                                               
    29                                                       constraint c_rst_n { rst_n dist {0 := 1, 1 := 9}; }
    30                                               
    31                                                       constraint c_rx_valid { rx_valid dist {0 := 1, 1 := 9};}
    32                                               
    33                                                       constraint c_din_write_only {
    34                                                               din[9:8] inside {WRITE_DATA, WRITE_ADDR};
    35                                                           }
    36                                               
    37                                                       constraint c_din_read_only {
    38                                                               din[9:8] inside {READ_DATA, READ_ADDR};
    39                                                               if (old_operation == READ_ADDR)
    40                                                                   din[9:8] == READ_DATA;
    41                                                               else
    42                                                                   din[9:8] == READ_ADDR;
    43                                                           }
    44                                               
    45                                                       constraint c_din_read_write { 
    46                                                           if      (old_operation == WRITE_ADDR)
    47                                                               din[9:8] inside {WRITE_DATA, WRITE_ADDR};
    48                                               
    49                                                           else if (old_operation == WRITE_DATA)
    50                                                               din[9:8] dist {READ_ADDR := 60, WRITE_ADDR := 40};
    51                                               
    52                                                           else if (old_operation == READ_ADDR)
    53                                                               din[9:8] == READ_DATA;
    54                                               
    55                                                           else
    56                                                               din[9:8] dist {WRITE_ADDR := 60, READ_ADDR := 40};
    57                                                           }
    58                                               
    59                                                       function void post_randomize();
    60              1                       3000                 old_operation = din[9:8];


=================================================================================
=== Instance: /Ram_sequencer_pkg
=== Design Unit: work.Ram_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /Ram_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_sequencer.sv
    1                                                package Ram_sequencer_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                
    6                                                    class Ram_sequencer extends uvm_sequencer #(Ram_seq_item);
    7               1                    ***0***             `uvm_component_utils(Ram_sequencer)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        function new(string name, uvm_component parent);
    10              1                          1                 super.new(name, parent);


=================================================================================
=== Instance: /Ram_reset_seq_pkg
=== Design Unit: work.Ram_reset_seq_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /Ram_reset_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_reset_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(Ram_reset_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(Ram_reset_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(Ram_reset_seq)
    9               4                    ***0***             `uvm_object_utils(Ram_reset_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(Ram_reset_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(Ram_reset_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_reset_seq_pkg --

  File Ram_reset_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         9         8    52.94%

================================Statement Details================================

Statement Coverage for instance /Ram_reset_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_reset_seq.sv
    1                                                package Ram_reset_seq_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                    import Ram_sequencer_pkg::*;
    6                                                    import Ram_shared_pkg::*;
    7                                                
    8                                                    class Ram_reset_seq extends uvm_sequence #(Ram_seq_item);
    9               1                    ***0***             `uvm_object_utils(Ram_reset_seq)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10                                                       Ram_seq_item item;
    11                                               
    12                                                       function new(string name = "Ram_reset_seq");
    13              1                          1                 super.new(name);
    14                                                       endfunction : new
    15                                               
    16                                                       task body();
    17              1                          1                 item = Ram_seq_item::type_id::create("item");
    18              1                          1                 start_item(item);
    19              1                          1                 item.rst_n = 0;
    20              1                          1                 item.din = '0;
    21              1                          1                 item.rx_valid = 0;
    22              1                          1                 finish_item(item);


=================================================================================
=== Instance: /Ram_write_only_seq_pkg
=== Design Unit: work.Ram_write_only_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/Ram_write_only_seq_pkg/Ram_write_only_seq/body/#ublk#219077847#19/immed__24
                     Ram_write_only_seq.sv(24)          0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /Ram_write_only_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_write_only_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(Ram_write_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(Ram_write_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(Ram_write_only_seq)
    9               4                    ***0***             `uvm_object_utils(Ram_write_only_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(Ram_write_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(Ram_write_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_write_only_seq_pkg --

  File Ram_write_only_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /Ram_write_only_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_write_only_seq.sv
    1                                                package Ram_write_only_seq_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                    import Ram_sequencer_pkg::*;
    6                                                    import Ram_shared_pkg::*;
    7                                                
    8                                                    class Ram_write_only_seq extends uvm_sequence #(Ram_seq_item);
    9               1                    ***0***             `uvm_object_utils(Ram_write_only_seq)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10                                                       Ram_seq_item item;
    11                                               
    12                                                       function new(string name = "Ram_write_only_seq");
    13              1                          1                 super.new(name);
    14                                                       endfunction : new
    15                                               
    16                                                       task body();
    17              1                          1                 item = Ram_seq_item::type_id::create("item");
    18                                                           
    19              1                       1000                 repeat (1000) begin
    20              1                       1000                     start_item(item);
    21              1                       1000                     item.constraint_mode(1);
    22              1                       1000                     item.c_din_read_only.constraint_mode(0);
    23              1                       1000                     item.c_din_read_write.constraint_mode(0);
    24                                                               assert(item.randomize());
    25              1                       1000                     finish_item(item);


=================================================================================
=== Instance: /Ram_write_read_seq_pkg
=== Design Unit: work.Ram_write_read_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/Ram_write_read_seq_pkg/Ram_write_read_seq/body/#ublk#161782743#19/immed__24
                     Ram_write_read_seq.sv(24)          0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /Ram_write_read_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_write_read_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(Ram_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(Ram_write_read_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(Ram_write_read_seq)
    9               4                    ***0***             `uvm_object_utils(Ram_write_read_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(Ram_write_read_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(Ram_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_write_read_seq_pkg --

  File Ram_write_read_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /Ram_write_read_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_write_read_seq.sv
    1                                                package Ram_write_read_seq_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                    import Ram_sequencer_pkg::*;
    6                                                    import Ram_shared_pkg::*;
    7                                                
    8                                                    class Ram_write_read_seq extends uvm_sequence #(Ram_seq_item);
    9               1                    ***0***             `uvm_object_utils(Ram_write_read_seq)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10                                                       Ram_seq_item item;
    11                                               
    12                                                       function new(string name = "Ram_write_read_seq");
    13              1                          1                 super.new(name);
    14                                                       endfunction : new
    15                                               
    16                                                       task body();
    17              1                          1                 item = Ram_seq_item::type_id::create("item");
    18                                                           
    19              1                       1000                 repeat (1000) begin
    20              1                       1000                     start_item(item);
    21              1                       1000                     item.constraint_mode(1);
    22              1                       1000                     item.c_din_write_only.constraint_mode(0);
    23              1                       1000                     item.c_din_read_only.constraint_mode(0);
    24                                                               assert(item.randomize());
    25              1                       1000                     finish_item(item);


=================================================================================
=== Instance: /Ram_read_only_seq_pkg
=== Design Unit: work.Ram_read_only_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/Ram_read_only_seq_pkg/Ram_read_only_seq/body/#ublk#244102487#19/immed__24
                     Ram_read_only_seq.sv(24)           0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /Ram_read_only_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_read_only_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(Ram_read_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(Ram_read_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(Ram_read_only_seq)
    9               4                    ***0***             `uvm_object_utils(Ram_read_only_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(Ram_read_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(Ram_read_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_read_only_seq_pkg --

  File Ram_read_only_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /Ram_read_only_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_read_only_seq.sv
    1                                                package Ram_read_only_seq_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                    import Ram_sequencer_pkg::*;
    6                                                    import Ram_shared_pkg::*;
    7                                                
    8                                                    class Ram_read_only_seq extends uvm_sequence #(Ram_seq_item);
    9               1                    ***0***             `uvm_object_utils(Ram_read_only_seq)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10                                                       Ram_seq_item item;
    11                                               
    12                                                       function new(string name = "Ram_read_only_seq");
    13              1                          1                 super.new(name);
    14                                                       endfunction : new
    15                                               
    16                                                       task body();
    17              1                          1                 item = Ram_seq_item::type_id::create("item");
    18                                                           
    19              1                       1000                 repeat (1000) begin
    20              1                       1000                     start_item(item);
    21              1                       1000                     item.constraint_mode(1);
    22              1                       1000                     item.c_din_write_only.constraint_mode(0);
    23              1                       1000                     item.c_din_read_write.constraint_mode(0);
    24                                                               assert(item.randomize());
    25              1                       1000                     finish_item(item);


=================================================================================
=== Instance: /Ram_coverage_pkg
=== Design Unit: work.Ram_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          5        na        na        na
            Covergroup Bins         14        14         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /Ram_coverage_pkg/Ram_coverage/cg_Ram           100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_din                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_rx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_tx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_din_rx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_din_tx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/Ram_coverage_pkg::Ram_coverage::cg_Ram  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_din                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin all_values[0]                                 904          1          -    Covered              
        bin all_values[1]                                 711          1          -    Covered              
        bin all_values[2]                                 693          1          -    Covered              
        bin all_values[3]                                 693          1          -    Covered              
        bin read_data                                     693          1          -    Covered              
        bin wr_addr_2_wr_data                             456          1          -    Covered              
        bin rd_addr_2_rd_addr                             693          1          -    Covered              
        bin transition                                    123          1          -    Covered              
    Coverpoint cp_rx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin rx_valid_0                                    302          1          -    Covered              
        bin rx_valid_1                                   2699          1          -    Covered              
    Coverpoint cp_tx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin tx_valid_0                                   2392          1          -    Covered              
        bin tx_valid_1                                    609          1          -    Covered              
    Cross cross_din_rx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_all_values_rx_valid_1                2699          1          -    Covered              
    Cross cross_din_tx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_read_data_tx_valid_1                  558          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /Ram_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_coverage.sv
    1                                                package Ram_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                    import Ram_shared_pkg::*;
    6                                                
    7                                                    class Ram_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(Ram_coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(Ram_seq_item) cov_export;
    10                                                       uvm_tlm_analysis_fifo #(Ram_seq_item) cov_fifo;
    11                                                       Ram_seq_item cov_item;
    12                                               
    13                                                       // Functional Coverage
    14                                                       covergroup cg_Ram;
    15                                                           cp_din: coverpoint cov_item.din[9:8] {
    16                                                               bins all_values[] = {[0:3]};
    17                                                               bins read_data = {READ_DATA};
    18                                                               bins wr_addr_2_wr_data = (WRITE_ADDR => WRITE_DATA);
    19                                                               bins rd_addr_2_rd_addr = (READ_ADDR => READ_DATA);
    20                                                               bins transition = (WRITE_ADDR => WRITE_DATA => READ_ADDR => READ_DATA);
    21                                                           }
    22                                                           cp_rx_valid: coverpoint cov_item.rx_valid {
    23                                                               bins rx_valid_0 = {0};
    24                                                               bins rx_valid_1 = {1};
    25                                                           }
    26                                                           cp_tx_valid: coverpoint cov_item.tx_valid {
    27                                                               bins tx_valid_0 = {0};
    28                                                               bins tx_valid_1 = {1};
    29                                                           }
    30                                                           cross_din_rx_valid: cross cp_din, cp_rx_valid {
    31                                                               option.cross_auto_bin_max = 0;
    32                                                               bins din_all_values_rx_valid_1 = binsof (cp_din.all_values) && binsof (cp_rx_valid.rx_valid_1);
    33                                                           }
    34                                               
    35                                                           cross_din_tx_valid: cross cp_din, cp_tx_valid {
    36                                                               option.cross_auto_bin_max = 0;
    37                                                               bins din_read_data_tx_valid_1 = binsof (cp_din.read_data) && binsof (cp_tx_valid.tx_valid_1);
    38                                                           }
    39                                                           
    40                                                       endgroup : cg_Ram
    41                                               
    42                                                       function new(string name = "Ram_coverage", uvm_component parent = null);
    43              1                          1                 super.new(name, parent);
    44              1                          1                 cg_Ram = new();
    45                                                       endfunction
    46                                               
    47                                                       function void build_phase(uvm_phase phase);
    48              1                          1                 super.build_phase(phase);
    49              1                          1                 cov_export = new("cov_export", this);
    50              1                          1                 cov_fifo = new("cov_fifo", this);
    51                                                       endfunction : build_phase
    52                                               
    53                                                       function void connect_phase(uvm_phase phase);
    54              1                          1                 super.connect_phase(phase);
    55              1                          1                 cov_export.connect(cov_fifo.analysis_export);
    56                                                       endfunction : connect_phase
    57                                               
    58                                                       task run_phase(uvm_phase phase);
    59              1                          1                 super.run_phase(phase);
    60              1                          1                 forever begin
    61              1                       3002                     cov_fifo.get(cov_item);
    62              1                       3001                     cg_Ram.sample();


=================================================================================
=== Instance: /Ram_scoreboard_pkg
=== Design Unit: work.Ram_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13         3        10    23.07%

================================Branch Details================================

Branch Coverage for instance /Ram_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_scoreboard.sv
------------------------------------IF Branch------------------------------------
    32                                      3001     Count coming in to IF
    32              1                    ***0***                     if ((seq_item_sb.dout !== seq_item_sb.dout_ref) || (seq_item_sb.tx_valid !== seq_item_sb.tx_valid_ref))
    43              1                       3001                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                   ***0***     Count coming in to IF
    34              1                    ***0***                         if (seq_item_sb.dout !== seq_item_sb.dout_ref)
    37              1                    ***0***                         else if (seq_item_sb.tx_valid !== seq_item_sb.tx_valid_ref)
                                         ***0***     All False Count
Branch totals: 0 hits of 3 branches = 0.00%

------------------------------------IF Branch------------------------------------
    35                                   ***0***     Count coming in to IF
    35              1                    ***0***                             `uvm_error("run_phase", $sformatf("Dout Mismatch: dout=%0d, dout_ref=%0d, %s",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***                             `uvm_error("run_phase", $sformatf("Tx_valid Mismatch: tx_valid=%0b, tx_valid_ref=%0b, %s",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    44                                      3001     Count coming in to IF
    44              1                    ***0***                         `uvm_info("run_phase", $sformatf("Match: dout=%0d, tx_valid=%0b",
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    53                                         1     Count coming in to IF
    53              1                          1                 `uvm_info("report_phase", $sformatf("Total Correct: %0d, Total Errors: %0d", correct_count, error_count), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_scoreboard_pkg --

  File Ram_scoreboard.sv
----------------Focused Condition View-------------------
Line       32 Item    1  ((this.seq_item_sb.dout !== this.seq_item_sb.dout_ref) || (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref))
Condition totals: 0 of 2 input terms covered = 0.00%

                                                     Input Term   Covered  Reason for no coverage   Hint
                                                    -----------  --------  -----------------------  --------------
          (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)         N  '_1' not hit             Hit '_1'
  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                       Non-masking condition(s)      
 ---------  ---------  --------------------                                             -------------------------     
  Row   1:          1  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)_0          ~(this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)
  Row   2:    ***0***  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)_1          -                             
  Row   3:          1  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)_0  ~(this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)
  Row   4:    ***0***  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)_1  ~(this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)

----------------Focused Condition View-------------------
Line       34 Item    1  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                             Input Term   Covered  Reason for no coverage   Hint
                                            -----------  --------  -----------------------  --------------
  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                               Non-masking condition(s)      
 ---------  ---------  --------------------                                     -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.dout !== this.seq_item_sb.dout_ref)_1  -                             

----------------Focused Condition View-------------------
Line       37 Item    1  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                                     Input Term   Covered  Reason for no coverage   Hint
                                                    -----------  --------  -----------------------  --------------
  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                       Non-masking condition(s)      
 ---------  ---------  --------------------                                             -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.tx_valid !== this.seq_item_sb.tx_valid_ref)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        14         6    70.00%

================================Statement Details================================

Statement Coverage for instance /Ram_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_scoreboard.sv
    1                                                package Ram_scoreboard_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                
    6                                                    class Ram_scoreboard extends uvm_scoreboard;
    7               1                    ***0***             `uvm_component_utils(Ram_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(Ram_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(Ram_seq_item) sb_fifo;
    10                                                       Ram_seq_item seq_item_sb;
    11                                               
    12              1                          1             int error_count =0; int correct_count=0;
    12              2                          1     
    13                                               
    14                                                       function new(string name = "Ram_scoreboard", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 sb_export   = new("sb_export", this);
    21              1                          1                 sb_fifo     = new("sb_fifo", this);
    22                                                       endfunction
    23                                               
    24                                                       function void connect_phase(uvm_phase phase);
    25              1                          1                 super.connect_phase(phase);
    26              1                          1                 sb_export.connect(sb_fifo.analysis_export);
    27                                                       endfunction
    28                                               
    29                                                       task run_phase(uvm_phase phase);
    30              1                          1                 forever begin
    31              1                       3002                     sb_fifo.get(seq_item_sb);
    32                                                               if ((seq_item_sb.dout !== seq_item_sb.dout_ref) || (seq_item_sb.tx_valid !== seq_item_sb.tx_valid_ref))
    33                                                               begin
    34                                                                   if (seq_item_sb.dout !== seq_item_sb.dout_ref)
    35              1                    ***0***                             `uvm_error("run_phase", $sformatf("Dout Mismatch: dout=%0d, dout_ref=%0d, %s",
    36                                                                           seq_item_sb.dout, seq_item_sb.dout_ref, seq_item_sb.convert2string_stimulus()))
    37                                                                   else if (seq_item_sb.tx_valid !== seq_item_sb.tx_valid_ref)
    38              1                    ***0***                             `uvm_error("run_phase", $sformatf("Tx_valid Mismatch: tx_valid=%0b, tx_valid_ref=%0b, %s",
    39                                                                           seq_item_sb.tx_valid, seq_item_sb.tx_valid_ref, seq_item_sb.convert2string_stimulus()))
    40                                               
    41              1                    ***0***                         error_count++;
    42                                                               end
    43                                                               else begin
    44              1                    ***0***                         `uvm_info("run_phase", $sformatf("Match: dout=%0d, tx_valid=%0b",
    45                                                                       seq_item_sb.dout, seq_item_sb.tx_valid), UVM_HIGH)
    46              1                       3001                         correct_count++;
    47                                                               end
    48                                                           end
    49                                                       endtask
    50                                               
    51                                                       function void report_phase(uvm_phase phase);
    52              1                          1                 super.report_phase(phase);
    53              1                          1                 `uvm_info("report_phase", $sformatf("Total Correct: %0d, Total Errors: %0d", correct_count, error_count), UVM_MEDIUM)


=================================================================================
=== Instance: /Ram_config_pkg
=== Design Unit: work.Ram_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /Ram_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_cfg.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(Ram_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(Ram_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(Ram_cfg)
    6               4                    ***0***             `uvm_object_utils(Ram_cfg)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(Ram_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(Ram_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /Ram_config_pkg --

  File Ram_cfg.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /Ram_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_cfg.sv
    1                                                package Ram_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh" 
    4                                                
    5                                                    class Ram_cfg extends uvm_object;
    6               1                    ***0***             `uvm_object_utils(Ram_cfg)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual Ram_if Ram_vif;
    8                                                        uvm_active_passive_enum is_active; // UVM_ACTIVE or UVM_PASSIVE
    9                                                
    10                                                       function new(string name = "Ram_cfg");
    11              1                          1                 super.new(name);


=================================================================================
=== Instance: /Ram_monitor_pkg
=== Design Unit: work.Ram_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /Ram_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_monitor.sv
------------------------------------IF Branch------------------------------------
    37                                      3001     Count coming in to IF
    37              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        16         3    84.21%

================================Statement Details================================

Statement Coverage for instance /Ram_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_monitor.sv
    1                                                package Ram_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                
    6                                                    class Ram_monitor extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(Ram_monitor)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        virtual Ram_if monitor_vif;
    10                                                       Ram_seq_item rsp_seq_item;
    11                                                       uvm_analysis_port #(Ram_seq_item) monitor_ap;
    12                                               
    13                                                       function new(string name = "Ram_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction : new
    16                                               
    17                                                       function void build_phase(uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 monitor_ap = new("monitor_ap", this);
    20                                                       endfunction : build_phase
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                       3002                     rsp_seq_item = Ram_seq_item::type_id::create("rsp_seq_item");
    26                                               
    27              1                       3002                     @(negedge monitor_vif.clk);
    28              1                       3001                     rsp_seq_item.rst_n        = monitor_vif.rst_n;
    29              1                       3001                     rsp_seq_item.rx_valid     = monitor_vif.rx_valid;
    30              1                       3001                     rsp_seq_item.din          = monitor_vif.din;
    31              1                       3001                     rsp_seq_item.tx_valid     = monitor_vif.tx_valid;
    32              1                       3001                     rsp_seq_item.tx_valid_ref = monitor_vif.tx_valid_ref;
    33              1                       3001                     rsp_seq_item.dout         = monitor_vif.dout;
    34              1                       3001                     rsp_seq_item.dout_ref     = monitor_vif.dout_ref;
    35                                               
    36              1                       3001                     monitor_ap.write(rsp_seq_item);
    37              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /Ram_driver_pkg
=== Design Unit: work.Ram_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /Ram_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_driver.sv
------------------------------------IF Branch------------------------------------
    28                                      3001     Count coming in to IF
    28              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /Ram_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_driver.sv
    1                                                package Ram_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_seq_item_pkg::*;
    5                                                
    6                                                    class Ram_driver extends uvm_driver #(Ram_seq_item);
    7               1                    ***0***             `uvm_component_utils(Ram_driver)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        virtual Ram_if driver_vif;
    10                                                       Ram_seq_item stim_seq_item;
    11                                               
    12                                                       function new(string name = "Ram_driver", uvm_component parent = null);
    13              1                          1                 super.new(name, parent);
    14                                                       endfunction : new
    15                                               
    16                                                       task run_phase(uvm_phase phase);
    17              1                          1                 super.run_phase(phase);
    18              1                          1                 forever begin
    19              1                       3002                     stim_seq_item = Ram_seq_item::type_id::create("stim_seq_item");
    20              1                       3002                     seq_item_port.get_next_item(stim_seq_item);
    21                                               
    22              1                       3001                     driver_vif.rst_n    = stim_seq_item.rst_n;
    23              1                       3001                     driver_vif.rx_valid = stim_seq_item.rx_valid;
    24              1                       3001                     driver_vif.din      = stim_seq_item.din;
    25              1                       3001                     @(negedge driver_vif.clk);
    26                                               
    27              1                       3001                     seq_item_port.item_done();
    28              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /Ram_agent_pkg
=== Design Unit: work.Ram_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /Ram_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_agent.sv
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***                 if (!uvm_config_db#(Ram_cfg)::get(this, "", "CFG", Ram_config)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***                     `uvm_fatal("NOVIF", "Cannot get cfg from uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    30                                         1     Count coming in to IF
    30              1                          1                 if (Ram_config.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    42                                         1     Count coming in to IF
    42              1                          1                 if (Ram_config.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /Ram_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_agent.sv
    1                                                package Ram_agent_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_driver_pkg::*;
    5                                                    import Ram_monitor_pkg::*;
    6                                                    import Ram_sequencer_pkg::*;
    7                                                    import Ram_config_pkg::*;
    8                                                    import Ram_seq_item_pkg::*;
    9                                                
    10                                                   class Ram_agent extends uvm_agent;
    11              1                    ***0***             `uvm_component_utils(Ram_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                                       Ram_driver driver;
    13                                                       Ram_monitor monitor;
    14                                                       Ram_sequencer sequencer;
    15                                                       Ram_cfg Ram_config;
    16                                                       uvm_analysis_port #(Ram_seq_item) agent_ap;
    17                                               
    18                                                       function new(string name = "Ram_agent", uvm_component parent = null);
    19              1                          1                 super.new(name, parent);
    20                                                       endfunction : new
    21                                               
    22                                                       function void build_phase(uvm_phase phase);
    23              1                          1                 super.build_phase(phase);
    24                                               
    25                                                           if (!uvm_config_db#(Ram_cfg)::get(this, "", "CFG", Ram_config)) begin
    26              1                    ***0***                     `uvm_fatal("NOVIF", "Cannot get cfg from uvm_config_db")
    27                                                           end
    28                                               
    29                                                            // only build driver and sequencer if agent is active
    30                                                           if (Ram_config.is_active == UVM_ACTIVE) begin
    31              1                          1                     driver      = Ram_driver::type_id::create("driver", this);
    32              1                          1                     sequencer   = Ram_sequencer::type_id::create("sequencer", this);
    33                                                           end
    34                                                           
    35              1                          1                 monitor  = Ram_monitor::type_id::create("monitor", this);
    36              1                          1                 agent_ap = new("agent_ap", this);
    37                                                       endfunction : build_phase
    38                                               
    39                                                       function void connect_phase(uvm_phase phase);
    40              1                          1                 super.connect_phase(phase);
    41                                                           // only connect driver and sequencer if agent is active
    42                                                           if (Ram_config.is_active == UVM_ACTIVE) begin
    43              1                          1                     driver.seq_item_port.connect(sequencer.seq_item_export);
    44              1                          1                     driver.driver_vif = Ram_config.Ram_vif;
    45                                                           end
    46              1                          1                 monitor.monitor_ap.connect(agent_ap);
    47              1                          1                 monitor.monitor_vif = Ram_config.Ram_vif;


=================================================================================
=== Instance: /Ram_env_pkg
=== Design Unit: work.Ram_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /Ram_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_env.sv
    1                                                package Ram_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_agent_pkg::*;
    5                                                    import Ram_scoreboard_pkg::*;
    6                                                    import Ram_coverage_pkg::*;
    7                                                
    8                                                    class Ram_env extends uvm_env;
    9               1                    ***0***             `uvm_component_utils(Ram_env)
    9               2                    ***0***     
    9               3                          2     
    10                                               
    11                                                       Ram_agent agent;
    12                                                       Ram_scoreboard scoreboard;
    13                                                       Ram_coverage coverage;
    14                                               
    15                                                       function new(string name = "Ram_env", uvm_component parent = null);
    16              1                          1                 super.new(name, parent);
    17                                                       endfunction : new
    18                                               
    19                                                       virtual function void build_phase(uvm_phase phase);
    20              1                          1                 super.build_phase(phase);
    21                                               
    22              1                          1                 agent       = Ram_agent::type_id::create("agent", this);
    23              1                          1                 scoreboard  = Ram_scoreboard::type_id::create("scoreboard", this);
    24              1                          1                 coverage    = Ram_coverage::type_id::create("coverage", this);
    25                                                       endfunction : build_phase
    26                                               
    27                                                       virtual function void connect_phase(uvm_phase phase);
    28              1                          1                 super.connect_phase(phase);
    29              1                          1                 agent.agent_ap.connect(scoreboard.sb_export);
    30              1                          1                 agent.agent_ap.connect(coverage.cov_export);


=================================================================================
=== Instance: /Ram_test_pkg
=== Design Unit: work.Ram_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         9        11    45.00%

================================Branch Details================================

Branch Coverage for instance /Ram_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_test.sv
------------------------------------IF Branch------------------------------------
    34                                         1     Count coming in to IF
    34              1                    ***0***                 if(!uvm_config_db#(virtual Ram_if)::get(this, "", "vif", Ram_config.Ram_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    35                                   ***0***     Count coming in to IF
    35              1                    ***0***                     `uvm_fatal("NOVIF", "Virtual interface must be set for:")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                         1     Count coming in to IF
    48              1                          1                 `uvm_info("run_phase", "Starting reset sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    50                                         1     Count coming in to IF
    50              1                          1                 `uvm_info("run_phase", "Completed reset sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    54                                         1     Count coming in to IF
    54              1                          1                 `uvm_info("run_phase", "Starting write only sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    56                                         1     Count coming in to IF
    56              1                          1                 `uvm_info("run_phase", "Completed write only sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    58                                         1     Count coming in to IF
    58              1                          1                 `uvm_info("run_phase", "Starting read only sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    60                                         1     Count coming in to IF
    60              1                          1                 `uvm_info("run_phase", "Completed read only sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                         1     Count coming in to IF
    62              1                          1                 `uvm_info("run_phase", "Starting write read sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                          1                 `uvm_info("run_phase", "Completed write read sequence", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      29        26         3    89.65%

================================Statement Details================================

Statement Coverage for instance /Ram_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Ram_test.sv
    1                                                package Ram_test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import Ram_env_pkg::*;
    5                                                    import Ram_config_pkg::*;
    6                                                    import Ram_read_only_seq_pkg::*;
    7                                                    import Ram_write_read_seq_pkg::*;
    8                                                    import Ram_write_only_seq_pkg::*;
    9                                                    import Ram_reset_seq_pkg::*;
    10                                               
    11                                                   class Ram_test extends uvm_test;
    12              1                    ***0***             `uvm_component_utils(Ram_test)
    12              2                    ***0***     
    12              3                          4     
    13                                               
    14                                                       Ram_env env;
    15                                                       Ram_read_only_seq read_only_sequence;
    16                                                       Ram_write_read_seq write_read_sequence;
    17                                                       Ram_write_only_seq write_only_sequence;
    18                                                       Ram_reset_seq reset_sequence;
    19                                                       Ram_cfg Ram_config;
    20                                                       
    21                                                       function new(string name = "Ram_test", uvm_component parent = null);
    22              1                          1                 super.new(name, parent);
    23                                                       endfunction : new
    24                                               
    25                                                       function void build_phase(uvm_phase phase);
    26              1                          1                 super.build_phase(phase);
    27              1                          1                 env = Ram_env::type_id::create("env", this);
    28              1                          1                 read_only_sequence = Ram_read_only_seq::type_id::create("read_only_sequence");
    29              1                          1                 write_read_sequence = Ram_write_read_seq::type_id::create("write_read_sequence");
    30              1                          1                 write_only_sequence = Ram_write_only_seq::type_id::create("write_only_sequence");
    31              1                          1                 reset_sequence = Ram_reset_seq::type_id::create("reset_sequence");
    32              1                          1                 Ram_config = Ram_cfg::type_id::create("Ram_config");
    33                                               
    34                                                           if(!uvm_config_db#(virtual Ram_if)::get(this, "", "vif", Ram_config.Ram_vif))
    35              1                    ***0***                     `uvm_fatal("NOVIF", "Virtual interface must be set for:")
    36                                                               
    37              1                          1                 Ram_config.is_active = UVM_ACTIVE; // Set agent to active mode
    38                                                           
    39              1                          1                 uvm_config_db#(Ram_cfg)::set(this, "*", "CFG", Ram_config);
    40                                                           
    41                                                       endfunction : build_phase
    42                                               
    43                                                       task run_phase(uvm_phase phase);
    44              1                          1                 super.run_phase(phase);
    45              1                          1                 phase.raise_objection(this);
    46                                               
    47                                                           // Start with reset sequence
    48              1                          1                 `uvm_info("run_phase", "Starting reset sequence", UVM_LOW)
    49              1                          1                 reset_sequence.start(env.agent.sequencer);
    50              1                          1                 `uvm_info("run_phase", "Completed reset sequence", UVM_LOW)
    51                                               
    52                                                           // Then run main sequences
    53                                               
    54              1                          1                 `uvm_info("run_phase", "Starting write only sequence", UVM_LOW)
    55              1                          1                 write_only_sequence.start(env.agent.sequencer);
    56              1                          1                 `uvm_info("run_phase", "Completed write only sequence", UVM_LOW)
    57                                                           
    58              1                          1                 `uvm_info("run_phase", "Starting read only sequence", UVM_LOW)
    59              1                          1                 read_only_sequence.start(env.agent.sequencer);
    60              1                          1                 `uvm_info("run_phase", "Completed read only sequence", UVM_LOW)
    61                                               
    62              1                          1                 `uvm_info("run_phase", "Starting write read sequence", UVM_LOW)
    63              1                          1                 write_read_sequence.start(env.agent.sequencer);
    64              1                          1                 `uvm_info("run_phase", "Completed write read sequence", UVM_LOW)
    65                                               
    66              1                          1                 phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /Ram_coverage_pkg/Ram_coverage/cg_Ram           100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_din                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_rx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cp_tx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_din_rx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_din_tx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/Ram_coverage_pkg::Ram_coverage::cg_Ram  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint cp_din                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin all_values[0]                                 904          1          -    Covered              
        bin all_values[1]                                 711          1          -    Covered              
        bin all_values[2]                                 693          1          -    Covered              
        bin all_values[3]                                 693          1          -    Covered              
        bin read_data                                     693          1          -    Covered              
        bin wr_addr_2_wr_data                             456          1          -    Covered              
        bin rd_addr_2_rd_addr                             693          1          -    Covered              
        bin transition                                    123          1          -    Covered              
    Coverpoint cp_rx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin rx_valid_0                                    302          1          -    Covered              
        bin rx_valid_1                                   2699          1          -    Covered              
    Coverpoint cp_tx_valid                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin tx_valid_0                                   2392          1          -    Covered              
        bin tx_valid_1                                    609          1          -    Covered              
    Cross cross_din_rx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_all_values_rx_valid_1                2699          1          -    Covered              
    Cross cross_din_tx_valid                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_read_data_tx_valid_1                  558          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/sva/cover__read_addr_read_data  Ram_sva Verilog  SVA  Ram_sva.sv(58)   476 Covered   
/top/DUT/sva/cover__write_addr_write_data 
                                         Ram_sva Verilog  SVA  Ram_sva.sv(57)   526 Covered   
/top/DUT/sva/cover__other_tx_valid       Ram_sva Verilog  SVA  Ram_sva.sv(56)  1642 Covered   
/top/DUT/sva/cover__read_data_tx_valid   Ram_sva Verilog  SVA  Ram_sva.sv(55)   439 Covered   
/top/DUT/sva/cover__reset                Ram_sva Verilog  SVA  Ram_sva.sv(54)   321 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 5

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/sva/assert__read_addr_read_data
                     Ram_sva.sv(51)                     0          1
/top/DUT/sva/assert__write_addr_write_data
                     Ram_sva.sv(50)                     0          1
/top/DUT/sva/assert__other_tx_valid
                     Ram_sva.sv(49)                     0          1
/top/DUT/sva/assert__read_data_tx_valid
                     Ram_sva.sv(48)                     0          1
/top/DUT/sva/assert__reset
                     Ram_sva.sv(47)                     0          1
/Ram_write_only_seq_pkg/Ram_write_only_seq/body/#ublk#219077847#19/immed__24
                     Ram_write_only_seq.sv(24)          0          1
/Ram_write_read_seq_pkg/Ram_write_read_seq/body/#ublk#161782743#19/immed__24
                     Ram_write_read_seq.sv(24)          0          1
/Ram_read_only_seq_pkg/Ram_read_only_seq/body/#ublk#244102487#19/immed__24
                     Ram_read_only_seq.sv(24)           0          1

Total Coverage By Instance (filtered view): 77.33%

